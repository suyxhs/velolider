{
  "title": "Generating Dynamic OG Images For Your Blog With Vercel OG",
  "publishedAt": "2023-03-07T21:00:00.000Z",
  "summary": "Improve your Next.js-based blog with OG images generated with @vercel/og.",
  "cover": {
    "src": "/images/posts/generating-dynamic-og-images-with-vercel-og/shubham-dhage-Hatkch_piQM-unsplash.jpg",
    "alt": "A person holding a camera",
    "caption": {
      "raw": "Photo by <a href=\"https://unsplash.com/@theshubhamdhage\" target=\"_blank\" rel=\"noopener noreferrer\">Shubham Dhage</a> on Unsplash",
      "html": "<p>Photo by Shubham Dhage on Unsplash</p>"
    },
    "type": "Image",
    "_raw": {}
  },
  "externals": {
    "Medium": "https://konstantinmuenster.medium.com/generating-dynamic-og-images-for-your-blog-with-vercel-og-1b5f940f6fb3",
    "type": "Externals",
    "_raw": {}
  },
  "category": "Engineering",
  "tags": [
    "next.js",
    "vercel",
    "og-image",
    "automation",
    "blog",
    "seo"
  ],
  "body": {
    "raw": "\nThroughout the years, Open Graph images became more and more important. Most modern tools (like Slack, Facebook, or Twitter) automatically show a little preview image of your website whenever you share it. This is the Open Graph image (or OG image).\n\nEspecially on social media platforms, link preview images influence heavily whether or not the user decides to visit your site. A well-designed image shows your competence even before the first page view.\n\nToo bad that generating those images dynamically has been quite a struggle… until now. Vercel has a new library, called Vercel OG, that helps you create preview images on the fly.\n\nLet’s take a look how we can use it to improve our blog.\n\n<LearningPath\n  items={[\n    'Integrate `@vercel/og` in Next.js-based blog',\n    'Generate and embed dynamic OG images for each blog post',\n  ]}\n/>\n\n<TargetAudience>Beginner React developers</TargetAudience>\n\n### Installing `@vercel/og`\n\nFirst, I set up a brand new Next.js site with the [Blog Starter Kit](https://vercel.com/templates/next.js/blog-starter-kit). We will use this blog as an example throughout this article.\n\nWith the new site up and running, we can install the `@vercel/og` library:\n\n```bash\nnpm install @vercel/og\n```\n\nThat’s it for now! We do not need any further configuration.\n\n### How `@vercel/og` Works\n\nBefore we get into implementation details, let’s first have a look at how Vercel OG image works.\n\nBehind the scenes, Vercel OG uses [Satori](https://github.com/vercel/satori), a new library to convert HTML and CSS to SVGs (and other image formats).\n\nSatori was built for the edge. Hence, it is lightweight, very fast, and runs in a Node.js environment. Sounds like a perfect use-case for API routes in Next.js? It is!\n\nIn our blog, we can utilize `@vercel/og` to do the following:\n\n1. Create an API route handler like `/api/og`. For dynamically generated images, this route may accept parameters via query params (e.g. `/api/og?title=My First Blog Post`)\n2. In your API route handler, define a JSX-like syntax that represents your image. Think of a classic JSX component but instead of HTML markup, you get an image as the rendered output.\n\nAnd that’s it. In production, each generated image will be cached at the edge to avoid unnecessary executions. Hence, our second call to `/api/og?title=My First Blog Post` will serve the generated and cached image right away.\n\n### Creating A `/api/og` API Route\n\nLet’s start implementing the OG image generation for your blog.\n\nInside your `pages/api` directory, create a new file called `og.tsx`. This will be the handler for our API route.\n\n```tsx:og.tsx\nimport { ImageResponse } from '@vercel/og';\nimport { NextApiHandler } from 'next';\n\nexport const config = {\n  runtime: 'edge',\n};\n\nconst handler: NextApiHandler = async req => {\n  try {\n    return new ImageResponse(<div>My First OG Image</div>, {\n      width: 1200,\n      height: 630,\n    });\n  } catch {\n    return new Response(`Failed to generate the image`, {\n      status: 500,\n    });\n  }\n};\n\nexport default handler;\n```\n\nWith this little example, you should already see your first generated OG image. Start your development server and visit `http://localhost:3000/api/og`.\n\nIn the example, we use `ImageResponse` to convert our JSX code (the first parameter) to an image with a specific configuration (the second parameter).\n\nNote: Although it looks like that we can write regular _JSX-like_ components in our API route handler, not all HTML, CSS, and JSX features are supported due to the limitations of the edge and the Satori rendering engine.\n\n### Styling OG Images With `@vercel/og`\n\nNow that we can successfully generate images with our API route, let’s work on the image content.\n\nFor this, I created two new components (`BackgroundCanvas` and `ProfileContent`) that we can import and use in our `og.tsx` file.\n\n```tsx:og.tsx\nconst handler: NextApiHandler = async req => {\n  try {\n    return new ImageResponse(\n      (\n        <BackgroundCanvas>\n          <ProfileContent />\n        </BackgroundCanvas>\n      ),\n      {\n        width: 1200,\n        height: 630,\n      }\n    );\n  } catch {\n    return new Response(`Failed to generate the image`, {\n      status: 500,\n    });\n  }\n};\n```\n\nThe `BackgroundCanvas` component looks like this:\n\n```tsx:BackgroundCanvas.tsx\nexport const BackgroundCanvas = ({ children }: { children?: ReactNode }) => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        width: '100%',\n        height: '100%',\n        background: 'linear-gradient(to right, #e8cbc0, #636fa4)',\n        padding: '32px',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          width: '100%',\n          height: '100%',\n          alignItems: 'center',\n          padding: '64px',\n        }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n```\n\nSince Satori (and thus Vercel OG) does not support all CSS properties, styling your components seems a bit rough at first. But since OG images are usually quite simple, I did not run into any problems due to that.\n\nThere is also an [experimental Tailwind CSS example](https://vercel.com/docs/concepts/functions/edge-functions/og-image-generation/og-image-examples#using-tailwind-css---experimental) which may be interesting to you.\n\nThe `ProfileContent` component is a more advanced example that also embeds images and custom fonts:\n\n```tsx:ProfileContent.tsx\nexport const ProfileContent = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        height: '100%',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n      }}\n    >\n      <div style={{ display: 'flex', marginTop: '80px' }}>\n        <img\n          alt=\"Vercel\"\n          height={180}\n          src=\"data:image/svg+xml,%3Csvg width='116' height='100' fill='black' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M57.5 0L115 100H0L57.5 0z' /%3E%3C/svg%3E\"\n          width={180}\n        />\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            marginLeft: '48px',\n          }}\n        >\n          <span\n            style={{\n              fontSize: '56px',\n              color: '#222',\n              paddingTop: '32px',\n              fontFamily: \"'Noto Sans', sans-serif\",\n              fontWeight: 700,\n            }}\n          >\n            Your Name\n          </span>\n          <span\n            style={{\n              fontSize: '28px',\n              color: '#222',\n              fontFamily: \"'Noto Sans', sans-serif\",\n              fontWeight: 500,\n            }}\n          >\n            Frontend Developer\n          </span>\n        </div>\n      </div>\n      <span\n        style={{\n          fontSize: '18px',\n          color: '#222',\n          fontFamily: \"'Noto Sans', sans-serif\",\n          fontWeight: 500,\n        }}\n      >\n        yourname.com\n      </span>\n    </div>\n  );\n};\n```\n\nTo resolve the specified `fontFamily` properties correctly, we need to load those fonts in our `og.tsx` file too:\n\n```tsx:og.tsx\nconst fetchNotoSansMedium = fetch(\n  new URL('../../public/fonts/NotoSans-Medium.ttf', import.meta.url).href\n).then(res => res.arrayBuffer());\n\nconst fetchNotoSansBold = fetch(\n  new URL('../../public/fonts/NotoSans-Bold.ttf', import.meta.url).href\n).then(res => res.arrayBuffer());\n\nconst handler: NextApiHandler = async () => {\n  const NotoSansBold = await fetchNotoSansBold;\n  const NotoSansMedium = await fetchNotoSansMedium;\n\n  try {\n    return new ImageResponse(\n      (\n        <BackgroundCanvas>\n          <ProfileContent />\n        </BackgroundCanvas>\n      ),\n      {\n        width: 1200,\n        height: 630,\n        fonts: [\n          {\n            name: 'Noto Sans',\n            data: NotoSansBold,\n            style: 'normal',\n            weight: 700,\n          },\n          {\n            name: 'Noto Sans',\n            data: NotoSansMedium,\n            style: 'normal',\n            weight: 500,\n          },\n        ],\n      }\n    );\n  } catch {\n    return new Response(`Failed to generate the image`, {\n      status: 500,\n    });\n  }\n};\n```\n\nBy placing our font files inside the `public` directory, we can fetch those inside our handler and pass the data along. The `ImageResponse` configuration allows us to specify multiple fonts using the `fonts` array.\n\nIf you hit your `/api/og` route again, you get this beautiful OG image:\n\n<Image\n  src=\"/images/posts/generating-dynamic-og-images-with-vercel-og/static-og-image-next-js.png\"\n  alt=\"OG image generated with Vercel OG\"\n/>\n\n### Adding The OG Image To Your Site\n\nWith the API route in place, we can add our generated OG image to our site. In Next.js, you can embed any meta properties with the `Head` component.\n\nLet’s assume you have a `Layout` component that wraps every page. To add the OG image to your site, you could extend your component like this:\n\n```tsx:Layout.tsx\nconst Layout = ({ children }: Props) => {\n  return (\n    <>\n      <Head>\n        <meta property=\"og:image\" content={`${BASE_URL}/api/og`} />\n      </Head>\n      <div className=\"min-h-screen\">\n        <main>{children}</main>\n      </div>\n      <Footer />\n    </>\n  );\n};\n```\n\nIn this example, `BASE_URL` is a variable that specifies the domain of our site based on the environment. If we run the site in development mode, this will be `http://localhost:3000`. In production, it will be whatever domain you host your site on.\n\n### Generating Dynamic OG Images For Blog Posts\n\nLastly, we want to create dynamic OG images for each individual blog post. Each image should show a little preview of the blog post title and its author.\n\nTo do that, we can extend our API route so that it accepts query params. Thus, we can call our OG image generation with dynamic data.\n\n```tsx:og.tsx\nconst handler: NextApiHandler = async req => {\n  const NotoSansBold = await fetchNotoSansBold;\n  const NotoSansMedium = await fetchNotoSansMedium;\n\n  const { searchParams } = new URL(req.url);\n\n  const hasTitle = searchParams.has('title');\n  const title = hasTitle ? searchParams.get('title') : undefined;\n\n  const Content = hasTitle ? (\n    <BlogPostContent title={title} />\n  ) : (\n    <ProfileContent />\n  );\n\n  try {\n    return new ImageResponse(<BackgroundCanvas>{Content}</BackgroundCanvas>, {\n      width: 1200,\n      height: 630,\n      fonts: [\n        {\n          name: 'Noto Sans',\n          data: NotoSansBold,\n          style: 'normal',\n          weight: 700,\n        },\n        {\n          name: 'Noto Sans',\n          data: NotoSansMedium,\n          style: 'normal',\n          weight: 500,\n        },\n      ],\n    });\n  } catch {\n    return new Response(`Failed to generate the image`, {\n      status: 500,\n    });\n  }\n};\n```\n\nWe can access the request and retrieve the `title` param from it. If there is a title specified, we simply render a different component. Pretty easy, isn’t it?\n\nIf we now call our API again with the following request: `/api/og?title=Generating Dynamic OG Images For Your Blog`, we get this image in return.\n\n<Image\n  src=\"/images/posts/generating-dynamic-og-images-with-vercel-og/dynamic-og-image-next-js.png\"\n  alt=\"OG image that is dynamically generated\"\n/>\n\nSimilarly to our first OG image, you can embed the dynamically generated OG image on your blog post page using the `Head` component:\n\n```tsx:[slug].tsx\nexport default function Post({ post, preview }: Props) {\n  const title = `${post.title} | Next.js Blog Example with ${CMS_NAME}`;\n\n  return (\n    <Layout preview={preview}>\n      <Container>\n        <Header />\n        <article className=\"mb-32\">\n          <Head>\n            <title>{title}</title>\n            <meta\n              property=\"og:image\"\n              content={`${BASE_URL}/api/og?title=${title}`}\n            />\n          </Head>\n          <PostHeader\n            title={post.title}\n            coverImage={post.coverImage}\n            date={post.date}\n            author={post.author}\n          />\n          <PostBody content={post.content} />\n        </article>\n      </Container>\n    </Layout>\n  );\n}\n```\n\nNow you automatically get an individual OG image for each blog post 🎉\n\n---\n\nWith `@vercel/og`, OG image generation got so much easier. If you want to learn more about, have a look at the [documentation](https://vercel.com/docs/concepts/functions/edge-functions/og-image-generation).\n\nIf you want to check out the full repository of our example, here it is:\n\n[https://github.com/konstantinmuenster/next-js-blog-with-vercel-og-image](https://github.com/konstantinmuenster/next-js-blog-with-vercel-og-image)\n",
    "code": "var Component=(()=>{var cn=Object.create;var I=Object.defineProperty;var un=Object.getOwnPropertyDescriptor;var fn=Object.getOwnPropertyNames;var mn=Object.getPrototypeOf,vn=Object.prototype.hasOwnProperty;var H=(s,n)=>()=>(n||s((n={exports:{}}).exports,n),n.exports),bn=(s,n)=>{for(var m in n)I(s,m,{get:n[m],enumerable:!0})},ye=(s,n,m,_)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let p of fn(n))!vn.call(s,p)&&p!==m&&I(s,p,{get:()=>n[p],enumerable:!(_=un(n,p))||_.enumerable});return s};var pn=(s,n,m)=>(m=s!=null?cn(mn(s)):{},ye(n||!s||!s.__esModule?I(m,\"default\",{value:s,enumerable:!0}):m,s)),hn=s=>ye(I({},\"__esModule\",{value:!0}),s);var De=H((wn,we)=>{we.exports=React});var Ue=H(q=>{\"use strict\";(function(){\"use strict\";var s=De(),n=Symbol.for(\"react.element\"),m=Symbol.for(\"react.portal\"),_=Symbol.for(\"react.fragment\"),p=Symbol.for(\"react.strict_mode\"),X=Symbol.for(\"react.profiler\"),J=Symbol.for(\"react.provider\"),K=Symbol.for(\"react.context\"),S=Symbol.for(\"react.forward_ref\"),j=Symbol.for(\"react.suspense\"),A=Symbol.for(\"react.suspense_list\"),R=Symbol.for(\"react.memo\"),F=Symbol.for(\"react.lazy\"),Te=Symbol.for(\"react.offscreen\"),Q=Symbol.iterator,Ce=\"@@iterator\";function ke(e){if(e===null||typeof e!=\"object\")return null;var r=Q&&e[Q]||e[Ce];return typeof r==\"function\"?r:null}var y=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function v(e){{for(var r=arguments.length,o=new Array(r>1?r-1:0),i=1;i<r;i++)o[i-1]=arguments[i];Oe(\"error\",e,o)}}function Oe(e,r,o){{var i=y.ReactDebugCurrentFrame,d=i.getStackAddendum();d!==\"\"&&(r+=\"%s\",o=o.concat([d]));var c=o.map(function(a){return String(a)});c.unshift(\"Warning: \"+r),Function.prototype.apply.call(console[e],console,c)}}var Pe=!1,Ie=!1,je=!1,Ae=!1,Fe=!1,Z;Z=Symbol.for(\"react.module.reference\");function Be(e){return!!(typeof e==\"string\"||typeof e==\"function\"||e===_||e===X||Fe||e===p||e===j||e===A||Ae||e===Te||Pe||Ie||je||typeof e==\"object\"&&e!==null&&(e.$$typeof===F||e.$$typeof===R||e.$$typeof===J||e.$$typeof===K||e.$$typeof===S||e.$$typeof===Z||e.getModuleId!==void 0))}function Ge(e,r,o){var i=e.displayName;if(i)return i;var d=r.displayName||r.name||\"\";return d!==\"\"?o+\"(\"+d+\")\":o}function ee(e){return e.displayName||\"Context\"}function g(e){if(e==null)return null;if(typeof e.tag==\"number\"&&v(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),typeof e==\"function\")return e.displayName||e.name||null;if(typeof e==\"string\")return e;switch(e){case _:return\"Fragment\";case m:return\"Portal\";case X:return\"Profiler\";case p:return\"StrictMode\";case j:return\"Suspense\";case A:return\"SuspenseList\"}if(typeof e==\"object\")switch(e.$$typeof){case K:var r=e;return ee(r)+\".Consumer\";case J:var o=e;return ee(o._context)+\".Provider\";case S:return Ge(e,e.render,\"ForwardRef\");case R:var i=e.displayName||null;return i!==null?i:g(e.type)||\"Memo\";case F:{var d=e,c=d._payload,a=d._init;try{return g(a(c))}catch{return null}}}return null}var x=Object.assign,U=0,ne,te,re,oe,ie,le,ae;function de(){}de.__reactDisabledLog=!0;function Me(){{if(U===0){ne=console.log,te=console.info,re=console.warn,oe=console.error,ie=console.group,le=console.groupCollapsed,ae=console.groupEnd;var e={configurable:!0,enumerable:!0,value:de,writable:!0};Object.defineProperties(console,{info:e,log:e,warn:e,error:e,group:e,groupCollapsed:e,groupEnd:e})}U++}}function Le(){{if(U--,U===0){var e={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:x({},e,{value:ne}),info:x({},e,{value:te}),warn:x({},e,{value:re}),error:x({},e,{value:oe}),group:x({},e,{value:ie}),groupCollapsed:x({},e,{value:le}),groupEnd:x({},e,{value:ae})})}U<0&&v(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")}}var B=y.ReactCurrentDispatcher,G;function T(e,r,o){{if(G===void 0)try{throw Error()}catch(d){var i=d.stack.trim().match(/\\n( *(at )?)/);G=i&&i[1]||\"\"}return`\n`+G+e}}var M=!1,C;{var We=typeof WeakMap==\"function\"?WeakMap:Map;C=new We}function se(e,r){if(!e||M)return\"\";{var o=C.get(e);if(o!==void 0)return o}var i;M=!0;var d=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var c;c=B.current,B.current=null,Me();try{if(r){var a=function(){throw Error()};if(Object.defineProperty(a.prototype,\"props\",{set:function(){throw Error()}}),typeof Reflect==\"object\"&&Reflect.construct){try{Reflect.construct(a,[])}catch(N){i=N}Reflect.construct(e,[],a)}else{try{a.call()}catch(N){i=N}e.call(a.prototype)}}else{try{throw Error()}catch(N){i=N}e()}}catch(N){if(N&&i&&typeof N.stack==\"string\"){for(var l=N.stack.split(`\n`),b=i.stack.split(`\n`),u=l.length-1,f=b.length-1;u>=1&&f>=0&&l[u]!==b[f];)f--;for(;u>=1&&f>=0;u--,f--)if(l[u]!==b[f]){if(u!==1||f!==1)do if(u--,f--,f<0||l[u]!==b[f]){var h=`\n`+l[u].replace(\" at new \",\" at \");return e.displayName&&h.includes(\"<anonymous>\")&&(h=h.replace(\"<anonymous>\",e.displayName)),typeof e==\"function\"&&C.set(e,h),h}while(u>=1&&f>=0);break}}}finally{M=!1,B.current=c,Le(),Error.prepareStackTrace=d}var D=e?e.displayName||e.name:\"\",xe=D?T(D):\"\";return typeof e==\"function\"&&C.set(e,xe),xe}function Ve(e,r,o){return se(e,!1)}function $e(e){var r=e.prototype;return!!(r&&r.isReactComponent)}function k(e,r,o){if(e==null)return\"\";if(typeof e==\"function\")return se(e,$e(e));if(typeof e==\"string\")return T(e);switch(e){case j:return T(\"Suspense\");case A:return T(\"SuspenseList\")}if(typeof e==\"object\")switch(e.$$typeof){case S:return Ve(e.render);case R:return k(e.type,r,o);case F:{var i=e,d=i._payload,c=i._init;try{return k(c(d),r,o)}catch{}}}return\"\"}var O=Object.prototype.hasOwnProperty,ce={},ue=y.ReactDebugCurrentFrame;function P(e){if(e){var r=e._owner,o=k(e.type,e._source,r?r.type:null);ue.setExtraStackFrame(o)}else ue.setExtraStackFrame(null)}function Ye(e,r,o,i,d){{var c=Function.call.bind(O);for(var a in e)if(c(e,a)){var l=void 0;try{if(typeof e[a]!=\"function\"){var b=Error((i||\"React class\")+\": \"+o+\" type `\"+a+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof e[a]+\"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");throw b.name=\"Invariant Violation\",b}l=e[a](r,a,i,o,null,\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\")}catch(u){l=u}l&&!(l instanceof Error)&&(P(d),v(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\",i||\"React class\",o,a,typeof l),P(null)),l instanceof Error&&!(l.message in ce)&&(ce[l.message]=!0,P(d),v(\"Failed %s type: %s\",o,l.message),P(null))}}}var He=Array.isArray;function L(e){return He(e)}function qe(e){{var r=typeof Symbol==\"function\"&&Symbol.toStringTag,o=r&&e[Symbol.toStringTag]||e.constructor.name||\"Object\";return o}}function ze(e){try{return fe(e),!1}catch{return!0}}function fe(e){return\"\"+e}function me(e){if(ze(e))return v(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\",qe(e)),fe(e)}var E=y.ReactCurrentOwner,Xe={key:!0,ref:!0,__self:!0,__source:!0},ve,be,W;W={};function Je(e){if(O.call(e,\"ref\")){var r=Object.getOwnPropertyDescriptor(e,\"ref\").get;if(r&&r.isReactWarning)return!1}return e.ref!==void 0}function Ke(e){if(O.call(e,\"key\")){var r=Object.getOwnPropertyDescriptor(e,\"key\").get;if(r&&r.isReactWarning)return!1}return e.key!==void 0}function Qe(e,r){if(typeof e.ref==\"string\"&&E.current&&r&&E.current.stateNode!==r){var o=g(E.current.type);W[o]||(v('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',g(E.current.type),e.ref),W[o]=!0)}}function Ze(e,r){{var o=function(){ve||(ve=!0,v(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",r))};o.isReactWarning=!0,Object.defineProperty(e,\"key\",{get:o,configurable:!0})}}function en(e,r){{var o=function(){be||(be=!0,v(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",r))};o.isReactWarning=!0,Object.defineProperty(e,\"ref\",{get:o,configurable:!0})}}var nn=function(e,r,o,i,d,c,a){var l={$$typeof:n,type:e,key:r,ref:o,props:a,_owner:c};return l._store={},Object.defineProperty(l._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(l,\"_self\",{configurable:!1,enumerable:!1,writable:!1,value:i}),Object.defineProperty(l,\"_source\",{configurable:!1,enumerable:!1,writable:!1,value:d}),Object.freeze&&(Object.freeze(l.props),Object.freeze(l)),l};function tn(e,r,o,i,d){{var c,a={},l=null,b=null;o!==void 0&&(me(o),l=\"\"+o),Ke(r)&&(me(r.key),l=\"\"+r.key),Je(r)&&(b=r.ref,Qe(r,d));for(c in r)O.call(r,c)&&!Xe.hasOwnProperty(c)&&(a[c]=r[c]);if(e&&e.defaultProps){var u=e.defaultProps;for(c in u)a[c]===void 0&&(a[c]=u[c])}if(l||b){var f=typeof e==\"function\"?e.displayName||e.name||\"Unknown\":e;l&&Ze(a,f),b&&en(a,f)}return nn(e,l,b,d,i,E.current,a)}}var V=y.ReactCurrentOwner,pe=y.ReactDebugCurrentFrame;function w(e){if(e){var r=e._owner,o=k(e.type,e._source,r?r.type:null);pe.setExtraStackFrame(o)}else pe.setExtraStackFrame(null)}var $;$=!1;function Y(e){return typeof e==\"object\"&&e!==null&&e.$$typeof===n}function he(){{if(V.current){var e=g(V.current.type);if(e)return`\n\nCheck the render method of \\``+e+\"`.\"}return\"\"}}function rn(e){{if(e!==void 0){var r=e.fileName.replace(/^.*[\\\\\\/]/,\"\"),o=e.lineNumber;return`\n\nCheck your code at `+r+\":\"+o+\".\"}return\"\"}}var _e={};function on(e){{var r=he();if(!r){var o=typeof e==\"string\"?e:e.displayName||e.name;o&&(r=`\n\nCheck the top-level render call using <`+o+\">.\")}return r}}function ge(e,r){{if(!e._store||e._store.validated||e.key!=null)return;e._store.validated=!0;var o=on(r);if(_e[o])return;_e[o]=!0;var i=\"\";e&&e._owner&&e._owner!==V.current&&(i=\" It was passed a child from \"+g(e._owner.type)+\".\"),w(e),v('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',o,i),w(null)}}function Ne(e,r){{if(typeof e!=\"object\")return;if(L(e))for(var o=0;o<e.length;o++){var i=e[o];Y(i)&&ge(i,r)}else if(Y(e))e._store&&(e._store.validated=!0);else if(e){var d=ke(e);if(typeof d==\"function\"&&d!==e.entries)for(var c=d.call(e),a;!(a=c.next()).done;)Y(a.value)&&ge(a.value,r)}}}function ln(e){{var r=e.type;if(r==null||typeof r==\"string\")return;var o;if(typeof r==\"function\")o=r.propTypes;else if(typeof r==\"object\"&&(r.$$typeof===S||r.$$typeof===R))o=r.propTypes;else return;if(o){var i=g(r);Ye(o,e.props,\"prop\",i,e)}else if(r.PropTypes!==void 0&&!$){$=!0;var d=g(r);v(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",d||\"Unknown\")}typeof r.getDefaultProps==\"function\"&&!r.getDefaultProps.isReactClassApproved&&v(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")}}function an(e){{for(var r=Object.keys(e.props),o=0;o<r.length;o++){var i=r[o];if(i!==\"children\"&&i!==\"key\"){w(e),v(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",i),w(null);break}}e.ref!==null&&(w(e),v(\"Invalid attribute `ref` supplied to `React.Fragment`.\"),w(null))}}function dn(e,r,o,i,d,c){{var a=Be(e);if(!a){var l=\"\";(e===void 0||typeof e==\"object\"&&e!==null&&Object.keys(e).length===0)&&(l+=\" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");var b=rn(d);b?l+=b:l+=he();var u;e===null?u=\"null\":L(e)?u=\"array\":e!==void 0&&e.$$typeof===n?(u=\"<\"+(g(e.type)||\"Unknown\")+\" />\",l=\" Did you accidentally export a JSX literal instead of a component?\"):u=typeof e,v(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",u,l)}var f=tn(e,r,o,d,c);if(f==null)return f;if(a){var h=r.children;if(h!==void 0)if(i)if(L(h)){for(var D=0;D<h.length;D++)Ne(h[D],e);Object.freeze&&Object.freeze(h)}else v(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");else Ne(h,e)}return e===_?an(f):ln(f),f}}var sn=dn;q.Fragment=_,q.jsxDEV=sn})()});var Se=H((Un,Ee)=>{\"use strict\";Ee.exports=Ue()});var xn={};bn(xn,{default:()=>Nn,frontmatter:()=>_n});var t=pn(Se()),_n={title:\"Generating Dynamic OG Images For Your Blog With Vercel OG\",summary:\"Improve your Next.js-based blog with OG images generated with @vercel/og.\",category:\"Engineering\",cover:{src:\"/images/posts/generating-dynamic-og-images-with-vercel-og/shubham-dhage-Hatkch_piQM-unsplash.jpg\",alt:\"A person holding a camera\",caption:'Photo by <a href=\"https://unsplash.com/@theshubhamdhage\" target=\"_blank\" rel=\"noopener noreferrer\">Shubham Dhage</a> on Unsplash'},tags:[\"next.js\",\"vercel\",\"og-image\",\"automation\",\"blog\",\"seo\"],publishedAt:\"2023/03/08\",externals:{Medium:\"https://konstantinmuenster.medium.com/generating-dynamic-og-images-for-your-blog-with-vercel-og-1b5f940f6fb3\"}};function Re(s){let n=Object.assign({p:\"p\",h3:\"h3\",a:\"a\",span:\"span\",code:\"code\",pre:\"pre\",ol:\"ol\",li:\"li\",em:\"em\",hr:\"hr\"},s.components),{LearningPath:m,TargetAudience:_,Image:p}=n;return p||z(\"Image\",!0,\"275:1-278:3\"),m||z(\"LearningPath\",!0,\"23:1-28:3\"),_||z(\"TargetAudience\",!0,\"30:1-30:59\"),(0,t.jsxDEV)(t.Fragment,{children:[(0,t.jsxDEV)(n.p,{children:\"Throughout the years, Open Graph images became more and more important. Most modern tools (like Slack, Facebook, or Twitter) automatically show a little preview image of your website whenever you share it. This is the Open Graph image (or OG image).\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:15,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Especially on social media platforms, link preview images influence heavily whether or not the user decides to visit your site. A well-designed image shows your competence even before the first page view.\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:17,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Too bad that generating those images dynamically has been quite a struggle\\u2026 until now. Vercel has a new library, called Vercel OG, that helps you create preview images on the fly.\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:19,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Let\\u2019s take a look how we can use it to improve our blog.\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:21,columnNumber:1},this),`\n`,(0,t.jsxDEV)(m,{items:[\"Integrate `@vercel/og` in Next.js-based blog\",\"Generate and embed dynamic OG images for each blog post\"]},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:23,columnNumber:1},this),`\n`,(0,t.jsxDEV)(_,{children:\"Beginner React developers\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:30,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h3,{id:\"installing-vercelog\",children:[(0,t.jsxDEV)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#installing-vercelog\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\"},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\"},this),\"Installing \",(0,t.jsxDEV)(n.code,{children:\"@vercel/og\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:32,columnNumber:16},this)]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:32,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"First, I set up a brand new Next.js site with the \",(0,t.jsxDEV)(n.a,{href:\"https://vercel.com/templates/next.js/blog-starter-kit\",target:\"_blank\",rel:\"noopener noreferrer nofollow\",children:\"Blog Starter Kit\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:34,columnNumber:51},this),\". We will use this blog as an example throughout this article.\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:34,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"With the new site up and running, we can install the \",(0,t.jsxDEV)(n.code,{children:\"@vercel/og\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:36,columnNumber:54},this),\" library:\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:36,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-bash\",children:`npm install @vercel/og\n`},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:38,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:38,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"That\\u2019s it for now! We do not need any further configuration.\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:42,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h3,{id:\"how-vercelog-works\",children:[(0,t.jsxDEV)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#how-vercelog-works\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\"},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\"},this),\"How \",(0,t.jsxDEV)(n.code,{children:\"@vercel/og\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:44,columnNumber:9},this),\" Works\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:44,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Before we get into implementation details, let\\u2019s first have a look at how Vercel OG image works.\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:46,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"Behind the scenes, Vercel OG uses \",(0,t.jsxDEV)(n.a,{href:\"https://github.com/vercel/satori\",target:\"_blank\",rel:\"noopener noreferrer nofollow\",children:\"Satori\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:48,columnNumber:35},this),\", a new library to convert HTML and CSS to SVGs (and other image formats).\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:48,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Satori was built for the edge. Hence, it is lightweight, very fast, and runs in a Node.js environment. Sounds like a perfect use-case for API routes in Next.js? It is!\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:50,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"In our blog, we can utilize \",(0,t.jsxDEV)(n.code,{children:\"@vercel/og\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:52,columnNumber:29},this),\" to do the following:\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:52,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.ol,{children:[`\n`,(0,t.jsxDEV)(n.li,{children:[\"Create an API route handler like \",(0,t.jsxDEV)(n.code,{children:\"/api/og\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:54,columnNumber:37},this),\". For dynamically generated images, this route may accept parameters via query params (e.g. \",(0,t.jsxDEV)(n.code,{children:\"/api/og?title=My First Blog Post\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:54,columnNumber:138},this),\")\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:54,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:\"In your API route handler, define a JSX-like syntax that represents your image. Think of a classic JSX component but instead of HTML markup, you get an image as the rendered output.\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:55,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:54,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"And that\\u2019s it. In production, each generated image will be cached at the edge to avoid unnecessary executions. Hence, our second call to \",(0,t.jsxDEV)(n.code,{children:\"/api/og?title=My First Blog Post\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:57,columnNumber:138},this),\" will serve the generated and cached image right away.\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:57,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h3,{id:\"creating-a-apiog-api-route\",children:[(0,t.jsxDEV)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#creating-a-apiog-api-route\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\"},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\"},this),\"Creating A \",(0,t.jsxDEV)(n.code,{children:\"/api/og\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:59,columnNumber:16},this),\" API Route\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:59,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Let\\u2019s start implementing the OG image generation for your blog.\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:61,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"Inside your \",(0,t.jsxDEV)(n.code,{children:\"pages/api\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:63,columnNumber:13},this),\" directory, create a new file called \",(0,t.jsxDEV)(n.code,{children:\"og.tsx\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:63,columnNumber:61},this),\". This will be the handler for our API route.\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:63,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-tsx:og.tsx\",children:`import { ImageResponse } from '@vercel/og';\nimport { NextApiHandler } from 'next';\n\nexport const config = {\n  runtime: 'edge',\n};\n\nconst handler: NextApiHandler = async req => {\n  try {\n    return new ImageResponse(<div>My First OG Image</div>, {\n      width: 1200,\n      height: 630,\n    });\n  } catch {\n    return new Response(\\`Failed to generate the image\\`, {\n      status: 500,\n    });\n  }\n};\n\nexport default handler;\n`},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:65,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:65,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"With this little example, you should already see your first generated OG image. Start your development server and visit \",(0,t.jsxDEV)(n.code,{children:\"http://localhost:3000/api/og\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:89,columnNumber:121},this),\".\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:89,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"In the example, we use \",(0,t.jsxDEV)(n.code,{children:\"ImageResponse\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:91,columnNumber:24},this),\" to convert our JSX code (the first parameter) to an image with a specific configuration (the second parameter).\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:91,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"Note: Although it looks like that we can write regular \",(0,t.jsxDEV)(n.em,{children:\"JSX-like\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:93,columnNumber:56},this),\" components in our API route handler, not all HTML, CSS, and JSX features are supported due to the limitations of the edge and the Satori rendering engine.\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:93,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h3,{id:\"styling-og-images-with-vercelog\",children:[(0,t.jsxDEV)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#styling-og-images-with-vercelog\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\"},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\"},this),\"Styling OG Images With \",(0,t.jsxDEV)(n.code,{children:\"@vercel/og\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:95,columnNumber:28},this)]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:95,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Now that we can successfully generate images with our API route, let\\u2019s work on the image content.\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:97,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"For this, I created two new components (\",(0,t.jsxDEV)(n.code,{children:\"BackgroundCanvas\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:99,columnNumber:41},this),\" and \",(0,t.jsxDEV)(n.code,{children:\"ProfileContent\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:99,columnNumber:64},this),\") that we can import and use in our \",(0,t.jsxDEV)(n.code,{children:\"og.tsx\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:99,columnNumber:116},this),\" file.\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:99,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-tsx:og.tsx\",children:`const handler: NextApiHandler = async req => {\n  try {\n    return new ImageResponse(\n      (\n        <BackgroundCanvas>\n          <ProfileContent />\n        </BackgroundCanvas>\n      ),\n      {\n        width: 1200,\n        height: 630,\n      }\n    );\n  } catch {\n    return new Response(\\`Failed to generate the image\\`, {\n      status: 500,\n    });\n  }\n};\n`},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:101,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:101,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"The \",(0,t.jsxDEV)(n.code,{children:\"BackgroundCanvas\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:123,columnNumber:5},this),\" component looks like this:\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:123,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-tsx:BackgroundCanvas.tsx\",children:`export const BackgroundCanvas = ({ children }: { children?: ReactNode }) => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        width: '100%',\n        height: '100%',\n        background: 'linear-gradient(to right, #e8cbc0, #636fa4)',\n        padding: '32px',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          width: '100%',\n          height: '100%',\n          alignItems: 'center',\n          padding: '64px',\n        }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n`},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:125,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:125,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Since Satori (and thus Vercel OG) does not support all CSS properties, styling your components seems a bit rough at first. But since OG images are usually quite simple, I did not run into any problems due to that.\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:153,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"There is also an \",(0,t.jsxDEV)(n.a,{href:\"https://vercel.com/docs/concepts/functions/edge-functions/og-image-generation/og-image-examples#using-tailwind-css---experimental\",target:\"_blank\",rel:\"noopener noreferrer nofollow\",children:\"experimental Tailwind CSS example\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:155,columnNumber:18},this),\" which may be interesting to you.\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:155,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"The \",(0,t.jsxDEV)(n.code,{children:\"ProfileContent\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:157,columnNumber:5},this),\" component is a more advanced example that also embeds images and custom fonts:\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:157,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-tsx:ProfileContent.tsx\",children:`export const ProfileContent = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        height: '100%',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n      }}\n    >\n      <div style={{ display: 'flex', marginTop: '80px' }}>\n        <img\n          alt=\"Vercel\"\n          height={180}\n          src=\"data:image/svg+xml,%3Csvg width='116' height='100' fill='black' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M57.5 0L115 100H0L57.5 0z' /%3E%3C/svg%3E\"\n          width={180}\n        />\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            marginLeft: '48px',\n          }}\n        >\n          <span\n            style={{\n              fontSize: '56px',\n              color: '#222',\n              paddingTop: '32px',\n              fontFamily: \"'Noto Sans', sans-serif\",\n              fontWeight: 700,\n            }}\n          >\n            Your Name\n          </span>\n          <span\n            style={{\n              fontSize: '28px',\n              color: '#222',\n              fontFamily: \"'Noto Sans', sans-serif\",\n              fontWeight: 500,\n            }}\n          >\n            Frontend Developer\n          </span>\n        </div>\n      </div>\n      <span\n        style={{\n          fontSize: '18px',\n          color: '#222',\n          fontFamily: \"'Noto Sans', sans-serif\",\n          fontWeight: 500,\n        }}\n      >\n        yourname.com\n      </span>\n    </div>\n  );\n};\n`},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:159,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:159,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"To resolve the specified \",(0,t.jsxDEV)(n.code,{children:\"fontFamily\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:222,columnNumber:26},this),\" properties correctly, we need to load those fonts in our \",(0,t.jsxDEV)(n.code,{children:\"og.tsx\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:222,columnNumber:96},this),\" file too:\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:222,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-tsx:og.tsx\",children:`const fetchNotoSansMedium = fetch(\n  new URL('../../public/fonts/NotoSans-Medium.ttf', import.meta.url).href\n).then(res => res.arrayBuffer());\n\nconst fetchNotoSansBold = fetch(\n  new URL('../../public/fonts/NotoSans-Bold.ttf', import.meta.url).href\n).then(res => res.arrayBuffer());\n\nconst handler: NextApiHandler = async () => {\n  const NotoSansBold = await fetchNotoSansBold;\n  const NotoSansMedium = await fetchNotoSansMedium;\n\n  try {\n    return new ImageResponse(\n      (\n        <BackgroundCanvas>\n          <ProfileContent />\n        </BackgroundCanvas>\n      ),\n      {\n        width: 1200,\n        height: 630,\n        fonts: [\n          {\n            name: 'Noto Sans',\n            data: NotoSansBold,\n            style: 'normal',\n            weight: 700,\n          },\n          {\n            name: 'Noto Sans',\n            data: NotoSansMedium,\n            style: 'normal',\n            weight: 500,\n          },\n        ],\n      }\n    );\n  } catch {\n    return new Response(\\`Failed to generate the image\\`, {\n      status: 500,\n    });\n  }\n};\n`},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:224,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:224,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"By placing our font files inside the \",(0,t.jsxDEV)(n.code,{children:\"public\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:271,columnNumber:38},this),\" directory, we can fetch those inside our handler and pass the data along. The \",(0,t.jsxDEV)(n.code,{children:\"ImageResponse\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:271,columnNumber:125},this),\" configuration allows us to specify multiple fonts using the \",(0,t.jsxDEV)(n.code,{children:\"fonts\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:271,columnNumber:201},this),\" array.\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:271,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"If you hit your \",(0,t.jsxDEV)(n.code,{children:\"/api/og\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:273,columnNumber:17},this),\" route again, you get this beautiful OG image:\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:273,columnNumber:1},this),`\n`,(0,t.jsxDEV)(p,{src:\"/images/posts/generating-dynamic-og-images-with-vercel-og/static-og-image-next-js.png\",alt:\"OG image generated with Vercel OG\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:275,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h3,{id:\"adding-the-og-image-to-your-site\",children:[(0,t.jsxDEV)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#adding-the-og-image-to-your-site\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\"},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\"},this),\"Adding The OG Image To Your Site\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:280,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"With the API route in place, we can add our generated OG image to our site. In Next.js, you can embed any meta properties with the \",(0,t.jsxDEV)(n.code,{children:\"Head\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:282,columnNumber:132},this),\" component.\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:282,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"Let\\u2019s assume you have a \",(0,t.jsxDEV)(n.code,{children:\"Layout\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:284,columnNumber:25},this),\" component that wraps every page. To add the OG image to your site, you could extend your component like this:\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:284,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-tsx:Layout.tsx\",children:`const Layout = ({ children }: Props) => {\n  return (\n    <>\n      <Head>\n        <meta property=\"og:image\" content={\\`\\${BASE_URL}/api/og\\`} />\n      </Head>\n      <div className=\"min-h-screen\">\n        <main>{children}</main>\n      </div>\n      <Footer />\n    </>\n  );\n};\n`},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:286,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:286,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"In this example, \",(0,t.jsxDEV)(n.code,{children:\"BASE_URL\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:302,columnNumber:18},this),\" is a variable that specifies the domain of our site based on the environment. If we run the site in development mode, this will be \",(0,t.jsxDEV)(n.code,{children:\"http://localhost:3000\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:302,columnNumber:160},this),\". In production, it will be whatever domain you host your site on.\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:302,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h3,{id:\"generating-dynamic-og-images-for-blog-posts\",children:[(0,t.jsxDEV)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#generating-dynamic-og-images-for-blog-posts\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\"},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\"},this),\"Generating Dynamic OG Images For Blog Posts\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:304,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Lastly, we want to create dynamic OG images for each individual blog post. Each image should show a little preview of the blog post title and its author.\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:306,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"To do that, we can extend our API route so that it accepts query params. Thus, we can call our OG image generation with dynamic data.\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:308,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-tsx:og.tsx\",children:`const handler: NextApiHandler = async req => {\n  const NotoSansBold = await fetchNotoSansBold;\n  const NotoSansMedium = await fetchNotoSansMedium;\n\n  const { searchParams } = new URL(req.url);\n\n  const hasTitle = searchParams.has('title');\n  const title = hasTitle ? searchParams.get('title') : undefined;\n\n  const Content = hasTitle ? (\n    <BlogPostContent title={title} />\n  ) : (\n    <ProfileContent />\n  );\n\n  try {\n    return new ImageResponse(<BackgroundCanvas>{Content}</BackgroundCanvas>, {\n      width: 1200,\n      height: 630,\n      fonts: [\n        {\n          name: 'Noto Sans',\n          data: NotoSansBold,\n          style: 'normal',\n          weight: 700,\n        },\n        {\n          name: 'Noto Sans',\n          data: NotoSansMedium,\n          style: 'normal',\n          weight: 500,\n        },\n      ],\n    });\n  } catch {\n    return new Response(\\`Failed to generate the image\\`, {\n      status: 500,\n    });\n  }\n};\n`},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:310,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:310,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"We can access the request and retrieve the \",(0,t.jsxDEV)(n.code,{children:\"title\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:353,columnNumber:44},this),\" param from it. If there is a title specified, we simply render a different component. Pretty easy, isn\\u2019t it?\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:353,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"If we now call our API again with the following request: \",(0,t.jsxDEV)(n.code,{children:\"/api/og?title=Generating Dynamic OG Images For Your Blog\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:355,columnNumber:58},this),\", we get this image in return.\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:355,columnNumber:1},this),`\n`,(0,t.jsxDEV)(p,{src:\"/images/posts/generating-dynamic-og-images-with-vercel-og/dynamic-og-image-next-js.png\",alt:\"OG image that is dynamically generated\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:357,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"Similarly to our first OG image, you can embed the dynamically generated OG image on your blog post page using the \",(0,t.jsxDEV)(n.code,{children:\"Head\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:362,columnNumber:116},this),\" component:\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:362,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-tsx:[slug].tsx\",children:`export default function Post({ post, preview }: Props) {\n  const title = \\`\\${post.title} | Next.js Blog Example with \\${CMS_NAME}\\`;\n\n  return (\n    <Layout preview={preview}>\n      <Container>\n        <Header />\n        <article className=\"mb-32\">\n          <Head>\n            <title>{title}</title>\n            <meta\n              property=\"og:image\"\n              content={\\`\\${BASE_URL}/api/og?title=\\${title}\\`}\n            />\n          </Head>\n          <PostHeader\n            title={post.title}\n            coverImage={post.coverImage}\n            date={post.date}\n            author={post.author}\n          />\n          <PostBody content={post.content} />\n        </article>\n      </Container>\n    </Layout>\n  );\n}\n`},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:364,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:364,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Now you automatically get an individual OG image for each blog post \\u{1F389}\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:394,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.hr,{},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:396,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"With \",(0,t.jsxDEV)(n.code,{children:\"@vercel/og\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:398,columnNumber:6},this),\", OG image generation got so much easier. If you want to learn more about, have a look at the \",(0,t.jsxDEV)(n.a,{href:\"https://vercel.com/docs/concepts/functions/edge-functions/og-image-generation\",target:\"_blank\",rel:\"noopener noreferrer nofollow\",children:\"documentation\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:398,columnNumber:112},this),\".\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:398,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"If you want to check out the full repository of our example, here it is:\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:400,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:(0,t.jsxDEV)(n.a,{href:\"https://github.com/konstantinmuenster/next-js-blog-with-vercel-og-image\",target:\"_blank\",rel:\"noopener noreferrer nofollow\",children:\"https://github.com/konstantinmuenster/next-js-blog-with-vercel-og-image\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:402,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:402,columnNumber:1},this)]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\",lineNumber:1,columnNumber:1},this)}function gn(s={}){let{wrapper:n}=s.components||{};return n?(0,t.jsxDEV)(n,Object.assign({},s,{children:(0,t.jsxDEV)(Re,s,void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\"},this)}),void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx\"},this):Re(s)}var Nn=gn;function z(s,n,m){throw new Error(\"Expected \"+(n?\"component\":\"object\")+\" `\"+s+\"` to be defined: you likely forgot to import, pass, or provide it.\"+(m?\"\\nIt\\u2019s referenced in your code at `\"+m+\"` in `/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-fac287d3-24fe-4ebe-8696-af2c3ccda135.mdx`\":\"\"))}return hn(xn);})();\n/*! Bundled license information:\n\nreact/cjs/react-jsx-dev-runtime.development.js:\n  (**\n   * @license React\n   * react-jsx-dev-runtime.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *)\n*/\n;return Component;"
  },
  "_id": "posts/009-generating-dynamic-og-images-with-vercel-og.mdx",
  "_raw": {
    "sourceFilePath": "posts/009-generating-dynamic-og-images-with-vercel-og.mdx",
    "sourceFileName": "009-generating-dynamic-og-images-with-vercel-og.mdx",
    "sourceFileDir": "posts",
    "contentType": "mdx",
    "flattenedPath": "posts/009-generating-dynamic-og-images-with-vercel-og"
  },
  "type": "Post",
  "slug": "generating-dynamic-og-images-with-vercel-og"
}