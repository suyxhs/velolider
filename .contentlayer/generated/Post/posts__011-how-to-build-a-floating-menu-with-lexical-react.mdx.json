{
  "title": "How To Build A Floating Menu With Lexical  and React",
  "publishedAt": "2023-05-01T21:00:00.000Z",
  "summary": "Nowadays text editors like Notion let you easily format text with a bubble menu near your selection. Let's build one!",
  "cover": {
    "src": "/images/posts/how-to-build-a-floating-menu-with-lexical-react/lexical-floating-menu-screenshot.jpg",
    "alt": "Screenshot of the floating menu we are going to create",
    "caption": {
      "raw": "This is the floating menu we are going to create!",
      "html": "<p>This is the floating menu we are going to create!</p>"
    },
    "type": "Image",
    "_raw": {}
  },
  "externals": {
    "Medium": "https://medium.com/konstantinmuenster/how-to-build-a-floating-menu-with-lexical-react-44eb69939cad",
    "type": "Externals",
    "_raw": {}
  },
  "category": "Engineering",
  "tags": [
    "notion",
    "lexical",
    "react",
    "bubble menu",
    "text selection",
    "action menu",
    "floating bar",
    "menu",
    "rich text editor",
    "WYSIWYG"
  ],
  "body": {
    "raw": "\nNowadays tools like Notion achieved quite a leap in terms of text editing experience. They introduced new patterns which seamlessly integrate into our flow of writing.\n\nOne of these new patterns is a floating menu that shows up whenever you select text. It keeps your attention on the text you are editing – instead of letting it wander to a menu bar at the very top of the page. I love those little details!\n\nSince I recently explored Lexical as a new framework for building rich text editors, I wanted to try creating such a bubble menu with Lexical and React.\n\nHere’s the result:\n\n<Image\n  src=\"/images/posts/how-to-build-a-floating-menu-with-lexical-react/lexical-floating-menu.gif\"\n  alt=\"Lexical Floating Menu\"\n/>\n\n<LearningPath\n  items={[\n    'Create floating menu with formatting options',\n    'Conditionally show menu near active text selection',\n  ]}\n/>\n\n<TargetAudience>Intermediate React developers</TargetAudience>\n\nLet’s go through it, step by step!\n\n## Setting up the editor\n\nFor this article, I created a simple editor upfront so that we can avoid any boilerplate code for the setup. You find this setup [on this branch](https://github.com/konstantinmuenster/lexical-react-floating-menu/tree/setup) in the Github project.\n\nIf you want to follow along, you can clone the project and follow the installation instructions.\n\nOnce you installed the dependencies and started the development server, you should see this little editor on your [localhost](http://localhost) instance:\n\n<Image\n  src=\"/images/posts/how-to-build-a-floating-menu-with-lexical-react/lexical-floating-menu-setup.png\"\n  alt=\"Lexical Floating Menu Setup\"\n/>\n\nIf you want to create the floating menu for your already existing editor, make\nsure you have all required dependencies installed. You find these inside the\n[package.json](https://github.com/konstantinmuenster/lexical-react-floating-menu/blob/setup/package.json).\n\n## Creating a new plugin\n\nHaving the setup done, we can move forward to creating the plugin for the floating menu.\n\nWith Lexical, plugins are essentially React components that we wrap within the editor composer. Hence we create a new file for our floating menu inside the plugins directory.\n\n```tsx:FloatingMenuPlugin.tsx\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { FloatingMenu, FloatingMenuCoords } from '../components/FloatingMenu';\n\nconst DOM_ELEMENT = document.body;\n\nexport function FloatingMenuPlugin() {\n  const ref = useRef<HTMLDivElement>(null);\n  const [coords, setCoords] = useState<FloatingMenuCoords>(undefined);\n  const [editor] = useLexicalComposerContext();\n\n  return createPortal(\n    <FloatingMenu ref={ref} editor={editor} coords={coords} />,\n    DOM_ELEMENT\n  );\n}\n```\n\nThe floating menu plugin takes care of two things:\n\n1. It calculates and stores the `coords` of the menu, so that we can display it right above the text selection.\n2. It attaches a React portal to the DOM. This takes care of rendering the actual FloatingMenu UI component (which we will create in a second).\n\nThis new plugin can now be added to the editor. For this, we navigate to `Editor.tsx` and add the plugin inside the Lexical editor component:\n\n```tsx:Editor.tsx\n// ...\nimport { FloatingMenuPlugin } from './plugins/FloatingMenu';\n\nexport function LexicalEditor(props: LexicalEditorProps) {\n  return (\n    <LexicalComposer initialConfig={props.config}>\n      <RichTextPlugin\n        contentEditable={<ContentEditable spellCheck={false} />}\n        placeholder={<Placeholder />}\n        ErrorBoundary={LexicalErrorBoundary}\n      />\n      {/** ... */}\n      <FloatingMenuPlugin />\n    </LexicalComposer>\n  );\n}\n```\n\nNow, whenever a new editor is created, it executes the `FloatingMenuPlugin`, which determines if and where we should render our `FloatingMenu` component.\n\nSince this component is the last missing piece to get something on the screen, let’s create it!\n\n## Creating the menu component\n\nInside the components directory, we create a new file `FloatingMenu.tsx`.\n\n```tsx:FloatingMenu.tsx\nimport { forwardRef, useEffect, useState } from 'react';\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { $getSelection, $isRangeSelection, FORMAT_TEXT_COMMAND } from 'lexical';\n\nimport { IconButton } from '../../IconButton';\n\nexport type FloatingMenuCoords = { x: number; y: number } | undefined;\n\ntype FloatingMenuState = {\n  isBold: boolean;\n  isCode: boolean;\n  isItalic: boolean;\n  isStrikethrough: boolean;\n  isUnderline: boolean;\n};\n\ntype FloatingMenuProps = {\n  editor: ReturnType<typeof useLexicalComposerContext>[0];\n  coords: FloatingMenuCoords;\n};\n\nexport const FloatingMenu = forwardRef<HTMLDivElement, FloatingMenuProps>(\n  function FloatingMenu(props, ref) {\n    const { editor, coords } = props;\n\n    const shouldShow = coords !== undefined;\n\n    const [state, setState] = useState<FloatingMenuState>({\n      isBold: false,\n      isCode: false,\n      isItalic: false,\n      isStrikethrough: false,\n      isUnderline: false,\n    });\n\n    useEffect(() => {\n      const unregisterListener = editor.registerUpdateListener(\n        ({ editorState }) => {\n          editorState.read(() => {\n            const selection = $getSelection();\n            if (!$isRangeSelection(selection)) return;\n\n            setState({\n              isBold: selection.hasFormat('bold'),\n              isCode: selection.hasFormat('code'),\n              isItalic: selection.hasFormat('italic'),\n              isStrikethrough: selection.hasFormat('strikethrough'),\n              isUnderline: selection.hasFormat('underline'),\n            });\n          });\n        }\n      );\n      return unregisterListener;\n    }, [editor]);\n\n    return (\n      <div\n        ref={ref}\n        className=\"flex items-center justify-between bg-slate-100 border-[1px] border-slate-300 rounded-md p-1 gap-1\"\n        aria-hidden={!shouldShow}\n        style={{\n          position: 'absolute',\n          top: coords?.y,\n          left: coords?.x,\n          visibility: shouldShow ? 'visible' : 'hidden',\n          opacity: shouldShow ? 1 : 0,\n        }}\n      >\n        <IconButton\n          icon=\"bold\"\n          aria-label=\"Format text as bold\"\n          active={state.isBold}\n          onClick={() => {\n            editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'bold');\n          }}\n        />\n        <IconButton\n          icon=\"italic\"\n          aria-label=\"Format text as italics\"\n          active={state.isItalic}\n          onClick={() => {\n            editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'italic');\n          }}\n        />\n        <IconButton\n          icon=\"underline\"\n          aria-label=\"Format text to underlined\"\n          active={state.isUnderline}\n          onClick={() => {\n            editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'underline');\n          }}\n        />\n        <IconButton\n          icon=\"strike\"\n          aria-label=\"Format text with a strikethrough\"\n          active={state.isStrikethrough}\n          onClick={() => {\n            editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'strikethrough');\n          }}\n        />\n        <IconButton\n          icon=\"code\"\n          aria-label=\"Format text with inline code\"\n          active={state.isCode}\n          onClick={() => {\n            editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'code');\n          }}\n        />\n      </div>\n    );\n  }\n);\n```\n\nThis component is the actual menu bar that we render to the screen. Since we want to position it right above the text selection, it requires a set of coordinates that we receive via the `coords` prop.\n\nIf `coords` is correctly set, we render the menu bar and its buttons.\n\nTo apply the same styling to all buttons, I created an `IconButton` component. You find it [here](https://github.com/konstantinmuenster/lexical-react-floating-menu/blob/setup/src/components/IconButton/IconButton.tsx).\n\nIn this component, the effect takes care of handling the formatting state. It gets executed whenever the editor state updates. Thus, we can sync our button states easily with the formatting applied to the current selection.\n\nLet’s have a quick preview of how our component looks like. For it, we can temporarily mutate our `coords` prop right before we define `shouldShow`.\n\n```tsx:FloatingMenu.tsx\nconst { editor, coords } = props;\ncoords = { x: 600, y: 75 }; // only temporary – remove it again!\nconst shouldShow = coords !== undefined;\n```\n\nNow, we can see our new menu bar that we just created!\n\n<Image\n  src=\"/images/posts/how-to-build-a-floating-menu-with-lexical-react/lexical-floating-menu-component.png\"\n  alt=\"Floating Menu, absolulety positioned\"\n/>\n\nBut instead of setting fixed coordinates manually, let’s see how we can automatically position the menu based on the active text selection!\n\n## Displaying the menu on active selections\n\nFor it, we switch back into our FloatingMenuPlugin. The plugin is responsible for observing the editor state and calculating the menu position if there is an active text selection. Let’s start with the latter part: calculating the menu position.\n\n### Calculating the menu position\n\nInside `FloatingMenuPlugin.tsx`, we add a new function that encapsulates the positioning logic:\n\n```tsx:FloatingMenuPlugin.tsx\nimport { computePosition } from '@floating-ui/dom';\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useCallback, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { FloatingMenu, FloatingMenuCoords } from '../components/FloatingMenu';\nimport { usePointerInteractions } from '../hooks/usePointerInteractions';\n\nconst DOM_ELEMENT = document.body;\n\nexport function FloatingMenuPlugin() {\n  const ref = useRef<HTMLDivElement>(null);\n  const [coords, setCoords] = useState<FloatingMenuCoords>(undefined);\n  const [editor] = useLexicalComposerContext();\n\n  const { isPointerDown, isPointerReleased } = usePointerInteractions();\n\n  const calculatePosition = useCallback(() => {\n    const domSelection = getSelection();\n    const domRange =\n      domSelection?.rangeCount !== 0 && domSelection?.getRangeAt(0);\n\n    if (!domRange || !ref.current || isPointerDown) return setCoords(undefined);\n\n    computePosition(domRange, ref.current, { placement: 'top' })\n      .then(pos => {\n        setCoords({ x: pos.x, y: pos.y - 10 });\n      })\n      .catch(() => {\n        setCoords(undefined);\n      });\n  }, [isPointerDown]);\n\n  return createPortal(\n    <FloatingMenu ref={ref} editor={editor} coords={coords} />,\n    DOM_ELEMENT\n  );\n}\n```\n\n`calculatePosition` uses three important helper functions:\n\n1. The browser native `getSelection()` method that allows us to access the browser selection. If it has an active range (i.e. multiple characters are selected), we pass it to our next helper.\n2. From `@floating-ui/dom` (awesome library!), we use `computePosition` to calculate the positions directly above our text selection. The calculated coordinates are set as state.\n3. Lastly, we added a crucial check with the help of `usePointerInteractions()`. If we don’t check for `isPointerDown`, we would already start setting coordinates and showing the menu bar if the user is still making his mouse selection across the text.\n\nWith this in place, we already dealt with most of the complexity. I love how libraries like `@floating/ui` can help us in making complex computations easy!\n\n### Defining when to show the menu\n\nFinally, we can write editor state observers that define in which situations we want to actually show the menu bar.\n\nFortunately, Lexical allows us to easily write an update listener that watches the editor state. Whenever the state updates, the callback function gets executed. In our case, we run our `$handleSelectionChange` function (if you want to learn more about the dollar sign prefix, check [this discussion on Github](https://github.com/facebook/lexical/discussions/1800)).\n\n```tsx:FloatingMenuPlugin.tsx\nimport { computePosition } from '@floating-ui/dom';\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { $getSelection, $isRangeSelection } from 'lexical';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { FloatingMenu, FloatingMenuCoords } from '../components/FloatingMenu';\nimport { usePointerInteractions } from '../hooks/usePointerInteractions';\n\nconst DOM_ELEMENT = document.body;\n\nexport function FloatingMenuPlugin() {\n  const ref = useRef<HTMLDivElement>(null);\n  const [coords, setCoords] = useState<FloatingMenuCoords>(undefined);\n  const [editor] = useLexicalComposerContext();\n\n  const { isPointerDown, isPointerReleased } = usePointerInteractions();\n\n  const calculatePosition = useCallback(() => {\n    // ...\n  }, [isPointerDown]);\n\n  const $handleSelectionChange = useCallback(() => {\n    if (\n      editor.isComposing() ||\n      editor.getRootElement() !== document.activeElement\n    ) {\n      setCoords(undefined);\n      return;\n    }\n\n    const selection = $getSelection();\n\n    if ($isRangeSelection(selection) && !selection.anchor.is(selection.focus)) {\n      calculatePosition();\n    } else {\n      setCoords(undefined);\n    }\n  }, [editor, calculatePosition]);\n\n  useEffect(() => {\n    const unregisterListener = editor.registerUpdateListener(\n      ({ editorState }) => {\n        editorState.read(() => $handleSelectionChange());\n      }\n    );\n    return unregisterListener;\n  }, [editor, $handleSelectionChange]);\n\n  return createPortal(\n    <FloatingMenu ref={ref} editor={editor} coords={coords} />,\n    DOM_ELEMENT\n  );\n}\n```\n\nNote that we also defined some additional checks. We don’t want to update the menu position…\n\n- if a [composition](https://w3c.github.io/uievents/#events-compositionevents) is active\n- if the editor is not focused anymore (e.g. the user clicks outside the editor)\n- if the editor selection does not span across multiple characters\n\nBut if all of those checks pass, we run our `calculatePosition` function.\n\nNonetheless, if we now try to select text via mouse, the floating menu won’t show up. This is because we are missing one important last piece.\n\nIn `calculatePosition`, we exit the function early if `isPointerDown` is true. This was to prevent the menu from popping up too early (when the user still spans the selection).\n\nBut now we don’t see the menu at all when making a selection via mouse. To fix this, we can add another effect that runs whenever `isPointerReleased` changes.\n\n```tsx:FloatingMenuPlugin.tsx\nimport { computePosition } from '@floating-ui/dom';\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { $getSelection, $isRangeSelection } from 'lexical';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { FloatingMenu, FloatingMenuCoords } from '../components/FloatingMenu';\nimport { usePointerInteractions } from '../hooks/usePointerInteractions';\n\nconst DOM_ELEMENT = document.body;\n\nexport function FloatingMenuPlugin() {\n  const ref = useRef<HTMLDivElement>(null);\n  const [coords, setCoords] = useState<FloatingMenuCoords>(undefined);\n  const [editor] = useLexicalComposerContext();\n\n  const { isPointerDown, isPointerReleased } = usePointerInteractions();\n\n  const calculatePosition = useCallback(() => {\n    // ...\n  }, [isPointerDown]);\n\n  const $handleSelectionChange = useCallback(() => {\n    // ...\n  }, [editor, calculatePosition]);\n\n  useEffect(() => {\n    // ...\n  }, [editor, $handleSelectionChange]);\n\n  const show = coords !== undefined;\n\n  useEffect(() => {\n    if (!show && isPointerReleased) {\n      editor.getEditorState().read(() => $handleSelectionChange());\n    }\n    // Adding show to the dependency array causes an issue if\n    // a range selection is dismissed by navigating via arrow keys.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPointerReleased, $handleSelectionChange, editor]);\n\n  return createPortal(\n    <FloatingMenu ref={ref} editor={editor} coords={coords} />,\n    DOM_ELEMENT\n  );\n}\n```\n\nIf the pointer was released and our coordinates are still undefined, we access the editor state and trigger our `$handleSelectionChange` callback.\n\nWith this we finally have all our pieces to test our floating menu in the editor!\n\n<Image\n  src=\"/images/posts/how-to-build-a-floating-menu-with-lexical-react/lexical-floating-menu.gif\"\n  alt=\"Lexical Floating Menu\"\n/>\n\n## Wrap up\n\nNow, this was honestly a lot to digest! Take your time and go through the steps again.\n\nIf you have question, feel free to reach out to me on Twitter:\n\nYou find [the full project on Github](https://github.com/konstantinmuenster/lexical-react-floating-menu).\n\n---\n\n#### 💁 Shortcut needed?\n\nSince interactive editor components such as a floating menu / bubble menu are hard to get right, I released `lexical-floating-menu` – a headless and fully customizable plugin to create floating menus easily.\n\nIt encapsulates everything we learnt in this tutorial. You can simply install it as any other npm package. Check out the instructions on Github:\n\n[konstantinmuenster/lexical-floating-menu](https://github.com/konstantinmuenster/lexical-floating-menu)\n\nI’d love to hear your feedback – either on Github or on Twitter!\n\nHave fun playing with it!\n",
    "code": "var Component=(()=>{var cn=Object.create;var F=Object.defineProperty;var un=Object.getOwnPropertyDescriptor;var fn=Object.getOwnPropertyNames;var mn=Object.getPrototypeOf,bn=Object.prototype.hasOwnProperty;var G=(d,n)=>()=>(n||d((n={exports:{}}).exports,n),n.exports),hn=(d,n)=>{for(var m in n)F(d,m,{get:n[m],enumerable:!0})},ye=(d,n,m,_)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let v of fn(n))!bn.call(d,v)&&v!==m&&F(d,v,{get:()=>n[v],enumerable:!(_=un(n,v))||_.enumerable});return d};var pn=(d,n,m)=>(m=d!=null?cn(mn(d)):{},ye(n||!d||!d.__esModule?F(m,\"default\",{value:d,enumerable:!0}):m,d)),vn=d=>ye(F({},\"__esModule\",{value:!0}),d);var De=G((wn,we)=>{we.exports=React});var Ce=G(X=>{\"use strict\";(function(){\"use strict\";var d=De(),n=Symbol.for(\"react.element\"),m=Symbol.for(\"react.portal\"),_=Symbol.for(\"react.fragment\"),v=Symbol.for(\"react.strict_mode\"),z=Symbol.for(\"react.profiler\"),K=Symbol.for(\"react.provider\"),J=Symbol.for(\"react.context\"),U=Symbol.for(\"react.forward_ref\"),I=Symbol.for(\"react.suspense\"),O=Symbol.for(\"react.suspense_list\"),R=Symbol.for(\"react.memo\"),L=Symbol.for(\"react.lazy\"),Pe=Symbol.for(\"react.offscreen\"),Z=Symbol.iterator,Te=\"@@iterator\";function ke(e){if(e===null||typeof e!=\"object\")return null;var r=Z&&e[Z]||e[Te];return typeof r==\"function\"?r:null}var y=d.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function b(e){{for(var r=arguments.length,o=new Array(r>1?r-1:0),i=1;i<r;i++)o[i-1]=arguments[i];Se(\"error\",e,o)}}function Se(e,r,o){{var i=y.ReactDebugCurrentFrame,a=i.getStackAddendum();a!==\"\"&&(r+=\"%s\",o=o.concat([a]));var c=o.map(function(s){return String(s)});c.unshift(\"Warning: \"+r),Function.prototype.apply.call(console[e],console,c)}}var Me=!1,Fe=!1,Ie=!1,Oe=!1,Le=!1,Q;Q=Symbol.for(\"react.module.reference\");function je(e){return!!(typeof e==\"string\"||typeof e==\"function\"||e===_||e===z||Le||e===v||e===I||e===O||Oe||e===Pe||Me||Fe||Ie||typeof e==\"object\"&&e!==null&&(e.$$typeof===L||e.$$typeof===R||e.$$typeof===K||e.$$typeof===J||e.$$typeof===U||e.$$typeof===Q||e.getModuleId!==void 0))}function Ae(e,r,o){var i=e.displayName;if(i)return i;var a=r.displayName||r.name||\"\";return a!==\"\"?o+\"(\"+a+\")\":o}function ee(e){return e.displayName||\"Context\"}function g(e){if(e==null)return null;if(typeof e.tag==\"number\"&&b(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),typeof e==\"function\")return e.displayName||e.name||null;if(typeof e==\"string\")return e;switch(e){case _:return\"Fragment\";case m:return\"Portal\";case z:return\"Profiler\";case v:return\"StrictMode\";case I:return\"Suspense\";case O:return\"SuspenseList\"}if(typeof e==\"object\")switch(e.$$typeof){case J:var r=e;return ee(r)+\".Consumer\";case K:var o=e;return ee(o._context)+\".Provider\";case U:return Ae(e,e.render,\"ForwardRef\");case R:var i=e.displayName||null;return i!==null?i:g(e.type)||\"Memo\";case L:{var a=e,c=a._payload,s=a._init;try{return g(s(c))}catch{return null}}}return null}var N=Object.assign,C=0,ne,te,re,oe,ie,le,se;function ae(){}ae.__reactDisabledLog=!0;function $e(){{if(C===0){ne=console.log,te=console.info,re=console.warn,oe=console.error,ie=console.group,le=console.groupCollapsed,se=console.groupEnd;var e={configurable:!0,enumerable:!0,value:ae,writable:!0};Object.defineProperties(console,{info:e,log:e,warn:e,error:e,group:e,groupCollapsed:e,groupEnd:e})}C++}}function We(){{if(C--,C===0){var e={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:N({},e,{value:ne}),info:N({},e,{value:te}),warn:N({},e,{value:re}),error:N({},e,{value:oe}),group:N({},e,{value:ie}),groupCollapsed:N({},e,{value:le}),groupEnd:N({},e,{value:se})})}C<0&&b(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")}}var j=y.ReactCurrentDispatcher,A;function P(e,r,o){{if(A===void 0)try{throw Error()}catch(a){var i=a.stack.trim().match(/\\n( *(at )?)/);A=i&&i[1]||\"\"}return`\n`+A+e}}var $=!1,T;{var Ye=typeof WeakMap==\"function\"?WeakMap:Map;T=new Ye}function de(e,r){if(!e||$)return\"\";{var o=T.get(e);if(o!==void 0)return o}var i;$=!0;var a=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var c;c=j.current,j.current=null,$e();try{if(r){var s=function(){throw Error()};if(Object.defineProperty(s.prototype,\"props\",{set:function(){throw Error()}}),typeof Reflect==\"object\"&&Reflect.construct){try{Reflect.construct(s,[])}catch(x){i=x}Reflect.construct(e,[],s)}else{try{s.call()}catch(x){i=x}e.call(s.prototype)}}else{try{throw Error()}catch(x){i=x}e()}}catch(x){if(x&&i&&typeof x.stack==\"string\"){for(var l=x.stack.split(`\n`),h=i.stack.split(`\n`),u=l.length-1,f=h.length-1;u>=1&&f>=0&&l[u]!==h[f];)f--;for(;u>=1&&f>=0;u--,f--)if(l[u]!==h[f]){if(u!==1||f!==1)do if(u--,f--,f<0||l[u]!==h[f]){var p=`\n`+l[u].replace(\" at new \",\" at \");return e.displayName&&p.includes(\"<anonymous>\")&&(p=p.replace(\"<anonymous>\",e.displayName)),typeof e==\"function\"&&T.set(e,p),p}while(u>=1&&f>=0);break}}}finally{$=!1,j.current=c,We(),Error.prepareStackTrace=a}var D=e?e.displayName||e.name:\"\",Ne=D?P(D):\"\";return typeof e==\"function\"&&T.set(e,Ne),Ne}function Be(e,r,o){return de(e,!1)}function Ve(e){var r=e.prototype;return!!(r&&r.isReactComponent)}function k(e,r,o){if(e==null)return\"\";if(typeof e==\"function\")return de(e,Ve(e));if(typeof e==\"string\")return P(e);switch(e){case I:return P(\"Suspense\");case O:return P(\"SuspenseList\")}if(typeof e==\"object\")switch(e.$$typeof){case U:return Be(e.render);case R:return k(e.type,r,o);case L:{var i=e,a=i._payload,c=i._init;try{return k(c(a),r,o)}catch{}}}return\"\"}var S=Object.prototype.hasOwnProperty,ce={},ue=y.ReactDebugCurrentFrame;function M(e){if(e){var r=e._owner,o=k(e.type,e._source,r?r.type:null);ue.setExtraStackFrame(o)}else ue.setExtraStackFrame(null)}function He(e,r,o,i,a){{var c=Function.call.bind(S);for(var s in e)if(c(e,s)){var l=void 0;try{if(typeof e[s]!=\"function\"){var h=Error((i||\"React class\")+\": \"+o+\" type `\"+s+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof e[s]+\"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");throw h.name=\"Invariant Violation\",h}l=e[s](r,s,i,o,null,\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\")}catch(u){l=u}l&&!(l instanceof Error)&&(M(a),b(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\",i||\"React class\",o,s,typeof l),M(null)),l instanceof Error&&!(l.message in ce)&&(ce[l.message]=!0,M(a),b(\"Failed %s type: %s\",o,l.message),M(null))}}}var Ge=Array.isArray;function W(e){return Ge(e)}function Xe(e){{var r=typeof Symbol==\"function\"&&Symbol.toStringTag,o=r&&e[Symbol.toStringTag]||e.constructor.name||\"Object\";return o}}function qe(e){try{return fe(e),!1}catch{return!0}}function fe(e){return\"\"+e}function me(e){if(qe(e))return b(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\",Xe(e)),fe(e)}var E=y.ReactCurrentOwner,ze={key:!0,ref:!0,__self:!0,__source:!0},be,he,Y;Y={};function Ke(e){if(S.call(e,\"ref\")){var r=Object.getOwnPropertyDescriptor(e,\"ref\").get;if(r&&r.isReactWarning)return!1}return e.ref!==void 0}function Je(e){if(S.call(e,\"key\")){var r=Object.getOwnPropertyDescriptor(e,\"key\").get;if(r&&r.isReactWarning)return!1}return e.key!==void 0}function Ze(e,r){if(typeof e.ref==\"string\"&&E.current&&r&&E.current.stateNode!==r){var o=g(E.current.type);Y[o]||(b('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',g(E.current.type),e.ref),Y[o]=!0)}}function Qe(e,r){{var o=function(){be||(be=!0,b(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",r))};o.isReactWarning=!0,Object.defineProperty(e,\"key\",{get:o,configurable:!0})}}function en(e,r){{var o=function(){he||(he=!0,b(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",r))};o.isReactWarning=!0,Object.defineProperty(e,\"ref\",{get:o,configurable:!0})}}var nn=function(e,r,o,i,a,c,s){var l={$$typeof:n,type:e,key:r,ref:o,props:s,_owner:c};return l._store={},Object.defineProperty(l._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(l,\"_self\",{configurable:!1,enumerable:!1,writable:!1,value:i}),Object.defineProperty(l,\"_source\",{configurable:!1,enumerable:!1,writable:!1,value:a}),Object.freeze&&(Object.freeze(l.props),Object.freeze(l)),l};function tn(e,r,o,i,a){{var c,s={},l=null,h=null;o!==void 0&&(me(o),l=\"\"+o),Je(r)&&(me(r.key),l=\"\"+r.key),Ke(r)&&(h=r.ref,Ze(r,a));for(c in r)S.call(r,c)&&!ze.hasOwnProperty(c)&&(s[c]=r[c]);if(e&&e.defaultProps){var u=e.defaultProps;for(c in u)s[c]===void 0&&(s[c]=u[c])}if(l||h){var f=typeof e==\"function\"?e.displayName||e.name||\"Unknown\":e;l&&Qe(s,f),h&&en(s,f)}return nn(e,l,h,a,i,E.current,s)}}var B=y.ReactCurrentOwner,pe=y.ReactDebugCurrentFrame;function w(e){if(e){var r=e._owner,o=k(e.type,e._source,r?r.type:null);pe.setExtraStackFrame(o)}else pe.setExtraStackFrame(null)}var V;V=!1;function H(e){return typeof e==\"object\"&&e!==null&&e.$$typeof===n}function ve(){{if(B.current){var e=g(B.current.type);if(e)return`\n\nCheck the render method of \\``+e+\"`.\"}return\"\"}}function rn(e){{if(e!==void 0){var r=e.fileName.replace(/^.*[\\\\\\/]/,\"\"),o=e.lineNumber;return`\n\nCheck your code at `+r+\":\"+o+\".\"}return\"\"}}var _e={};function on(e){{var r=ve();if(!r){var o=typeof e==\"string\"?e:e.displayName||e.name;o&&(r=`\n\nCheck the top-level render call using <`+o+\">.\")}return r}}function ge(e,r){{if(!e._store||e._store.validated||e.key!=null)return;e._store.validated=!0;var o=on(r);if(_e[o])return;_e[o]=!0;var i=\"\";e&&e._owner&&e._owner!==B.current&&(i=\" It was passed a child from \"+g(e._owner.type)+\".\"),w(e),b('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',o,i),w(null)}}function xe(e,r){{if(typeof e!=\"object\")return;if(W(e))for(var o=0;o<e.length;o++){var i=e[o];H(i)&&ge(i,r)}else if(H(e))e._store&&(e._store.validated=!0);else if(e){var a=ke(e);if(typeof a==\"function\"&&a!==e.entries)for(var c=a.call(e),s;!(s=c.next()).done;)H(s.value)&&ge(s.value,r)}}}function ln(e){{var r=e.type;if(r==null||typeof r==\"string\")return;var o;if(typeof r==\"function\")o=r.propTypes;else if(typeof r==\"object\"&&(r.$$typeof===U||r.$$typeof===R))o=r.propTypes;else return;if(o){var i=g(r);He(o,e.props,\"prop\",i,e)}else if(r.PropTypes!==void 0&&!V){V=!0;var a=g(r);b(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",a||\"Unknown\")}typeof r.getDefaultProps==\"function\"&&!r.getDefaultProps.isReactClassApproved&&b(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")}}function sn(e){{for(var r=Object.keys(e.props),o=0;o<r.length;o++){var i=r[o];if(i!==\"children\"&&i!==\"key\"){w(e),b(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",i),w(null);break}}e.ref!==null&&(w(e),b(\"Invalid attribute `ref` supplied to `React.Fragment`.\"),w(null))}}function an(e,r,o,i,a,c){{var s=je(e);if(!s){var l=\"\";(e===void 0||typeof e==\"object\"&&e!==null&&Object.keys(e).length===0)&&(l+=\" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");var h=rn(a);h?l+=h:l+=ve();var u;e===null?u=\"null\":W(e)?u=\"array\":e!==void 0&&e.$$typeof===n?(u=\"<\"+(g(e.type)||\"Unknown\")+\" />\",l=\" Did you accidentally export a JSX literal instead of a component?\"):u=typeof e,b(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",u,l)}var f=tn(e,r,o,a,c);if(f==null)return f;if(s){var p=r.children;if(p!==void 0)if(i)if(W(p)){for(var D=0;D<p.length;D++)xe(p[D],e);Object.freeze&&Object.freeze(p)}else b(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");else xe(p,e)}return e===_?sn(f):ln(f),f}}var dn=an;X.Fragment=_,X.jsxDEV=dn})()});var Ue=G((Cn,Ee)=>{\"use strict\";Ee.exports=Ce()});var Nn={};hn(Nn,{default:()=>xn,frontmatter:()=>_n});var t=pn(Ue()),_n={title:\"How To Build A Floating Menu With Lexical  and React\",summary:\"Nowadays text editors like Notion let you easily format text with a bubble menu near your selection. Let's build one!\",publishedAt:\"2023/05/02\",category:\"Engineering\",cover:{src:\"/images/posts/how-to-build-a-floating-menu-with-lexical-react/lexical-floating-menu-screenshot.jpg\",alt:\"Screenshot of the floating menu we are going to create\",caption:\"This is the floating menu we are going to create!\"},tags:[\"notion\",\"lexical\",\"react\",\"bubble menu\",\"text selection\",\"action menu\",\"floating bar\",\"menu\",\"rich text editor\",\"WYSIWYG\"],externals:{Medium:\"https://medium.com/konstantinmuenster/how-to-build-a-floating-menu-with-lexical-react-44eb69939cad\"}};function Re(d){let n=Object.assign({p:\"p\",h2:\"h2\",a:\"a\",span:\"span\",pre:\"pre\",code:\"code\",ol:\"ol\",li:\"li\",h3:\"h3\",ul:\"ul\",hr:\"hr\",h4:\"h4\"},d.components),{Image:m,LearningPath:_,TargetAudience:v}=n;return m||q(\"Image\",!0,\"35:1-38:3\"),_||q(\"LearningPath\",!0,\"40:1-45:3\"),v||q(\"TargetAudience\",!0,\"47:1-47:63\"),(0,t.jsxDEV)(t.Fragment,{children:[(0,t.jsxDEV)(n.p,{children:\"Nowadays tools like Notion achieved quite a leap in terms of text editing experience. They introduced new patterns which seamlessly integrate into our flow of writing.\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:27,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"One of these new patterns is a floating menu that shows up whenever you select text. It keeps your attention on the text you are editing \\u2013 instead of letting it wander to a menu bar at the very top of the page. I love those little details!\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:29,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Since I recently explored Lexical as a new framework for building rich text editors, I wanted to try creating such a bubble menu with Lexical and React.\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:31,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Here\\u2019s the result:\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:33,columnNumber:1},this),`\n`,(0,t.jsxDEV)(m,{src:\"/images/posts/how-to-build-a-floating-menu-with-lexical-react/lexical-floating-menu.gif\",alt:\"Lexical Floating Menu\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:35,columnNumber:1},this),`\n`,(0,t.jsxDEV)(_,{items:[\"Create floating menu with formatting options\",\"Conditionally show menu near active text selection\"]},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:40,columnNumber:1},this),`\n`,(0,t.jsxDEV)(v,{children:\"Intermediate React developers\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:47,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Let\\u2019s go through it, step by step!\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:49,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h2,{id:\"setting-up-the-editor\",children:[(0,t.jsxDEV)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#setting-up-the-editor\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\"},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\"},this),\"Setting up the editor\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:51,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"For this article, I created a simple editor upfront so that we can avoid any boilerplate code for the setup. You find this setup \",(0,t.jsxDEV)(n.a,{href:\"https://github.com/konstantinmuenster/lexical-react-floating-menu/tree/setup\",target:\"_blank\",rel:\"noopener noreferrer nofollow\",children:\"on this branch\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:53,columnNumber:130},this),\" in the Github project.\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:53,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"If you want to follow along, you can clone the project and follow the installation instructions.\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:55,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"Once you installed the dependencies and started the development server, you should see this little editor on your \",(0,t.jsxDEV)(n.a,{href:\"http://localhost\",target:\"_blank\",rel:\"noopener noreferrer nofollow\",children:\"localhost\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:57,columnNumber:115},this),\" instance:\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:57,columnNumber:1},this),`\n`,(0,t.jsxDEV)(m,{src:\"/images/posts/how-to-build-a-floating-menu-with-lexical-react/lexical-floating-menu-setup.png\",alt:\"Lexical Floating Menu Setup\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:59,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[`If you want to create the floating menu for your already existing editor, make\nsure you have all required dependencies installed. You find these inside the\n`,(0,t.jsxDEV)(n.a,{href:\"https://github.com/konstantinmuenster/lexical-react-floating-menu/blob/setup/package.json\",target:\"_blank\",rel:\"noopener noreferrer nofollow\",children:\"package.json\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:66,columnNumber:1},this),\".\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:64,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h2,{id:\"creating-a-new-plugin\",children:[(0,t.jsxDEV)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#creating-a-new-plugin\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\"},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\"},this),\"Creating a new plugin\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:68,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Having the setup done, we can move forward to creating the plugin for the floating menu.\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:70,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"With Lexical, plugins are essentially React components that we wrap within the editor composer. Hence we create a new file for our floating menu inside the plugins directory.\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:72,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-tsx:FloatingMenuPlugin.tsx\",children:`import { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { FloatingMenu, FloatingMenuCoords } from '../components/FloatingMenu';\n\nconst DOM_ELEMENT = document.body;\n\nexport function FloatingMenuPlugin() {\n  const ref = useRef<HTMLDivElement>(null);\n  const [coords, setCoords] = useState<FloatingMenuCoords>(undefined);\n  const [editor] = useLexicalComposerContext();\n\n  return createPortal(\n    <FloatingMenu ref={ref} editor={editor} coords={coords} />,\n    DOM_ELEMENT\n  );\n}\n`},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:74,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:74,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"The floating menu plugin takes care of two things:\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:95,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.ol,{children:[`\n`,(0,t.jsxDEV)(n.li,{children:[\"It calculates and stores the \",(0,t.jsxDEV)(n.code,{children:\"coords\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:97,columnNumber:33},this),\" of the menu, so that we can display it right above the text selection.\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:97,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:\"It attaches a React portal to the DOM. This takes care of rendering the actual FloatingMenu UI component (which we will create in a second).\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:98,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:97,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"This new plugin can now be added to the editor. For this, we navigate to \",(0,t.jsxDEV)(n.code,{children:\"Editor.tsx\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:100,columnNumber:74},this),\" and add the plugin inside the Lexical editor component:\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:100,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-tsx:Editor.tsx\",children:`// ...\nimport { FloatingMenuPlugin } from './plugins/FloatingMenu';\n\nexport function LexicalEditor(props: LexicalEditorProps) {\n  return (\n    <LexicalComposer initialConfig={props.config}>\n      <RichTextPlugin\n        contentEditable={<ContentEditable spellCheck={false} />}\n        placeholder={<Placeholder />}\n        ErrorBoundary={LexicalErrorBoundary}\n      />\n      {/** ... */}\n      <FloatingMenuPlugin />\n    </LexicalComposer>\n  );\n}\n`},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:102,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:102,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"Now, whenever a new editor is created, it executes the \",(0,t.jsxDEV)(n.code,{children:\"FloatingMenuPlugin\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:121,columnNumber:56},this),\", which determines if and where we should render our \",(0,t.jsxDEV)(n.code,{children:\"FloatingMenu\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:121,columnNumber:129},this),\" component.\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:121,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Since this component is the last missing piece to get something on the screen, let\\u2019s create it!\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:123,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h2,{id:\"creating-the-menu-component\",children:[(0,t.jsxDEV)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#creating-the-menu-component\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\"},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\"},this),\"Creating the menu component\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:125,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"Inside the components directory, we create a new file \",(0,t.jsxDEV)(n.code,{children:\"FloatingMenu.tsx\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:127,columnNumber:55},this),\".\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:127,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-tsx:FloatingMenu.tsx\",children:`import { forwardRef, useEffect, useState } from 'react';\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { $getSelection, $isRangeSelection, FORMAT_TEXT_COMMAND } from 'lexical';\n\nimport { IconButton } from '../../IconButton';\n\nexport type FloatingMenuCoords = { x: number; y: number } | undefined;\n\ntype FloatingMenuState = {\n  isBold: boolean;\n  isCode: boolean;\n  isItalic: boolean;\n  isStrikethrough: boolean;\n  isUnderline: boolean;\n};\n\ntype FloatingMenuProps = {\n  editor: ReturnType<typeof useLexicalComposerContext>[0];\n  coords: FloatingMenuCoords;\n};\n\nexport const FloatingMenu = forwardRef<HTMLDivElement, FloatingMenuProps>(\n  function FloatingMenu(props, ref) {\n    const { editor, coords } = props;\n\n    const shouldShow = coords !== undefined;\n\n    const [state, setState] = useState<FloatingMenuState>({\n      isBold: false,\n      isCode: false,\n      isItalic: false,\n      isStrikethrough: false,\n      isUnderline: false,\n    });\n\n    useEffect(() => {\n      const unregisterListener = editor.registerUpdateListener(\n        ({ editorState }) => {\n          editorState.read(() => {\n            const selection = $getSelection();\n            if (!$isRangeSelection(selection)) return;\n\n            setState({\n              isBold: selection.hasFormat('bold'),\n              isCode: selection.hasFormat('code'),\n              isItalic: selection.hasFormat('italic'),\n              isStrikethrough: selection.hasFormat('strikethrough'),\n              isUnderline: selection.hasFormat('underline'),\n            });\n          });\n        }\n      );\n      return unregisterListener;\n    }, [editor]);\n\n    return (\n      <div\n        ref={ref}\n        className=\"flex items-center justify-between bg-slate-100 border-[1px] border-slate-300 rounded-md p-1 gap-1\"\n        aria-hidden={!shouldShow}\n        style={{\n          position: 'absolute',\n          top: coords?.y,\n          left: coords?.x,\n          visibility: shouldShow ? 'visible' : 'hidden',\n          opacity: shouldShow ? 1 : 0,\n        }}\n      >\n        <IconButton\n          icon=\"bold\"\n          aria-label=\"Format text as bold\"\n          active={state.isBold}\n          onClick={() => {\n            editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'bold');\n          }}\n        />\n        <IconButton\n          icon=\"italic\"\n          aria-label=\"Format text as italics\"\n          active={state.isItalic}\n          onClick={() => {\n            editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'italic');\n          }}\n        />\n        <IconButton\n          icon=\"underline\"\n          aria-label=\"Format text to underlined\"\n          active={state.isUnderline}\n          onClick={() => {\n            editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'underline');\n          }}\n        />\n        <IconButton\n          icon=\"strike\"\n          aria-label=\"Format text with a strikethrough\"\n          active={state.isStrikethrough}\n          onClick={() => {\n            editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'strikethrough');\n          }}\n        />\n        <IconButton\n          icon=\"code\"\n          aria-label=\"Format text with inline code\"\n          active={state.isCode}\n          onClick={() => {\n            editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'code');\n          }}\n        />\n      </div>\n    );\n  }\n);\n`},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:129,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:129,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"This component is the actual menu bar that we render to the screen. Since we want to position it right above the text selection, it requires a set of coordinates that we receive via the \",(0,t.jsxDEV)(n.code,{children:\"coords\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:244,columnNumber:187},this),\" prop.\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:244,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"If \",(0,t.jsxDEV)(n.code,{children:\"coords\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:246,columnNumber:4},this),\" is correctly set, we render the menu bar and its buttons.\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:246,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"To apply the same styling to all buttons, I created an \",(0,t.jsxDEV)(n.code,{children:\"IconButton\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:248,columnNumber:56},this),\" component. You find it \",(0,t.jsxDEV)(n.a,{href:\"https://github.com/konstantinmuenster/lexical-react-floating-menu/blob/setup/src/components/IconButton/IconButton.tsx\",target:\"_blank\",rel:\"noopener noreferrer nofollow\",children:\"here\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:248,columnNumber:92},this),\".\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:248,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"In this component, the effect takes care of handling the formatting state. It gets executed whenever the editor state updates. Thus, we can sync our button states easily with the formatting applied to the current selection.\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:250,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"Let\\u2019s have a quick preview of how our component looks like. For it, we can temporarily mutate our \",(0,t.jsxDEV)(n.code,{children:\"coords\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:252,columnNumber:99},this),\" prop right before we define \",(0,t.jsxDEV)(n.code,{children:\"shouldShow\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:252,columnNumber:136},this),\".\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:252,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-tsx:FloatingMenu.tsx\",children:`const { editor, coords } = props;\ncoords = { x: 600, y: 75 }; // only temporary \\u2013 remove it again!\nconst shouldShow = coords !== undefined;\n`},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:254,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:254,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Now, we can see our new menu bar that we just created!\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:260,columnNumber:1},this),`\n`,(0,t.jsxDEV)(m,{src:\"/images/posts/how-to-build-a-floating-menu-with-lexical-react/lexical-floating-menu-component.png\",alt:\"Floating Menu, absolulety positioned\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:262,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"But instead of setting fixed coordinates manually, let\\u2019s see how we can automatically position the menu based on the active text selection!\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:267,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h2,{id:\"displaying-the-menu-on-active-selections\",children:[(0,t.jsxDEV)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#displaying-the-menu-on-active-selections\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\"},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\"},this),\"Displaying the menu on active selections\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:269,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"For it, we switch back into our FloatingMenuPlugin. The plugin is responsible for observing the editor state and calculating the menu position if there is an active text selection. Let\\u2019s start with the latter part: calculating the menu position.\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:271,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h3,{id:\"calculating-the-menu-position\",children:[(0,t.jsxDEV)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#calculating-the-menu-position\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\"},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\"},this),\"Calculating the menu position\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:273,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"Inside \",(0,t.jsxDEV)(n.code,{children:\"FloatingMenuPlugin.tsx\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:275,columnNumber:8},this),\", we add a new function that encapsulates the positioning logic:\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:275,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-tsx:FloatingMenuPlugin.tsx\",children:`import { computePosition } from '@floating-ui/dom';\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useCallback, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { FloatingMenu, FloatingMenuCoords } from '../components/FloatingMenu';\nimport { usePointerInteractions } from '../hooks/usePointerInteractions';\n\nconst DOM_ELEMENT = document.body;\n\nexport function FloatingMenuPlugin() {\n  const ref = useRef<HTMLDivElement>(null);\n  const [coords, setCoords] = useState<FloatingMenuCoords>(undefined);\n  const [editor] = useLexicalComposerContext();\n\n  const { isPointerDown, isPointerReleased } = usePointerInteractions();\n\n  const calculatePosition = useCallback(() => {\n    const domSelection = getSelection();\n    const domRange =\n      domSelection?.rangeCount !== 0 && domSelection?.getRangeAt(0);\n\n    if (!domRange || !ref.current || isPointerDown) return setCoords(undefined);\n\n    computePosition(domRange, ref.current, { placement: 'top' })\n      .then(pos => {\n        setCoords({ x: pos.x, y: pos.y - 10 });\n      })\n      .catch(() => {\n        setCoords(undefined);\n      });\n  }, [isPointerDown]);\n\n  return createPortal(\n    <FloatingMenu ref={ref} editor={editor} coords={coords} />,\n    DOM_ELEMENT\n  );\n}\n`},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:277,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:277,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[(0,t.jsxDEV)(n.code,{children:\"calculatePosition\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:318,columnNumber:1},this),\" uses three important helper functions:\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:318,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.ol,{children:[`\n`,(0,t.jsxDEV)(n.li,{children:[\"The browser native \",(0,t.jsxDEV)(n.code,{children:\"getSelection()\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:320,columnNumber:23},this),\" method that allows us to access the browser selection. If it has an active range (i.e. multiple characters are selected), we pass it to our next helper.\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:320,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:[\"From \",(0,t.jsxDEV)(n.code,{children:\"@floating-ui/dom\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:321,columnNumber:9},this),\" (awesome library!), we use \",(0,t.jsxDEV)(n.code,{children:\"computePosition\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:321,columnNumber:55},this),\" to calculate the positions directly above our text selection. The calculated coordinates are set as state.\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:321,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:[\"Lastly, we added a crucial check with the help of \",(0,t.jsxDEV)(n.code,{children:\"usePointerInteractions()\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:322,columnNumber:54},this),\". If we don\\u2019t check for \",(0,t.jsxDEV)(n.code,{children:\"isPointerDown\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:322,columnNumber:104},this),\", we would already start setting coordinates and showing the menu bar if the user is still making his mouse selection across the text.\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:322,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:320,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"With this in place, we already dealt with most of the complexity. I love how libraries like \",(0,t.jsxDEV)(n.code,{children:\"@floating/ui\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:324,columnNumber:93},this),\" can help us in making complex computations easy!\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:324,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h3,{id:\"defining-when-to-show-the-menu\",children:[(0,t.jsxDEV)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#defining-when-to-show-the-menu\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\"},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\"},this),\"Defining when to show the menu\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:326,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Finally, we can write editor state observers that define in which situations we want to actually show the menu bar.\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:328,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"Fortunately, Lexical allows us to easily write an update listener that watches the editor state. Whenever the state updates, the callback function gets executed. In our case, we run our \",(0,t.jsxDEV)(n.code,{children:\"$handleSelectionChange\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:330,columnNumber:187},this),\" function (if you want to learn more about the dollar sign prefix, check \",(0,t.jsxDEV)(n.a,{href:\"https://github.com/facebook/lexical/discussions/1800\",target:\"_blank\",rel:\"noopener noreferrer nofollow\",children:\"this discussion on Github\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:330,columnNumber:284},this),\").\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:330,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-tsx:FloatingMenuPlugin.tsx\",children:`import { computePosition } from '@floating-ui/dom';\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { $getSelection, $isRangeSelection } from 'lexical';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { FloatingMenu, FloatingMenuCoords } from '../components/FloatingMenu';\nimport { usePointerInteractions } from '../hooks/usePointerInteractions';\n\nconst DOM_ELEMENT = document.body;\n\nexport function FloatingMenuPlugin() {\n  const ref = useRef<HTMLDivElement>(null);\n  const [coords, setCoords] = useState<FloatingMenuCoords>(undefined);\n  const [editor] = useLexicalComposerContext();\n\n  const { isPointerDown, isPointerReleased } = usePointerInteractions();\n\n  const calculatePosition = useCallback(() => {\n    // ...\n  }, [isPointerDown]);\n\n  const $handleSelectionChange = useCallback(() => {\n    if (\n      editor.isComposing() ||\n      editor.getRootElement() !== document.activeElement\n    ) {\n      setCoords(undefined);\n      return;\n    }\n\n    const selection = $getSelection();\n\n    if ($isRangeSelection(selection) && !selection.anchor.is(selection.focus)) {\n      calculatePosition();\n    } else {\n      setCoords(undefined);\n    }\n  }, [editor, calculatePosition]);\n\n  useEffect(() => {\n    const unregisterListener = editor.registerUpdateListener(\n      ({ editorState }) => {\n        editorState.read(() => $handleSelectionChange());\n      }\n    );\n    return unregisterListener;\n  }, [editor, $handleSelectionChange]);\n\n  return createPortal(\n    <FloatingMenu ref={ref} editor={editor} coords={coords} />,\n    DOM_ELEMENT\n  );\n}\n`},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:332,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:332,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Note that we also defined some additional checks. We don\\u2019t want to update the menu position\\u2026\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:389,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.ul,{children:[`\n`,(0,t.jsxDEV)(n.li,{children:[\"if a \",(0,t.jsxDEV)(n.a,{href:\"https://w3c.github.io/uievents/#events-compositionevents\",target:\"_blank\",rel:\"noopener noreferrer nofollow\",children:\"composition\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:391,columnNumber:8},this),\" is active\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:391,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:\"if the editor is not focused anymore (e.g. the user clicks outside the editor)\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:392,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:\"if the editor selection does not span across multiple characters\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:393,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:391,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"But if all of those checks pass, we run our \",(0,t.jsxDEV)(n.code,{children:\"calculatePosition\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:395,columnNumber:45},this),\" function.\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:395,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Nonetheless, if we now try to select text via mouse, the floating menu won\\u2019t show up. This is because we are missing one important last piece.\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:397,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"In \",(0,t.jsxDEV)(n.code,{children:\"calculatePosition\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:399,columnNumber:4},this),\", we exit the function early if \",(0,t.jsxDEV)(n.code,{children:\"isPointerDown\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:399,columnNumber:55},this),\" is true. This was to prevent the menu from popping up too early (when the user still spans the selection).\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:399,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"But now we don\\u2019t see the menu at all when making a selection via mouse. To fix this, we can add another effect that runs whenever \",(0,t.jsxDEV)(n.code,{children:\"isPointerReleased\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:401,columnNumber:131},this),\" changes.\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:401,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-tsx:FloatingMenuPlugin.tsx\",children:`import { computePosition } from '@floating-ui/dom';\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { $getSelection, $isRangeSelection } from 'lexical';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { FloatingMenu, FloatingMenuCoords } from '../components/FloatingMenu';\nimport { usePointerInteractions } from '../hooks/usePointerInteractions';\n\nconst DOM_ELEMENT = document.body;\n\nexport function FloatingMenuPlugin() {\n  const ref = useRef<HTMLDivElement>(null);\n  const [coords, setCoords] = useState<FloatingMenuCoords>(undefined);\n  const [editor] = useLexicalComposerContext();\n\n  const { isPointerDown, isPointerReleased } = usePointerInteractions();\n\n  const calculatePosition = useCallback(() => {\n    // ...\n  }, [isPointerDown]);\n\n  const $handleSelectionChange = useCallback(() => {\n    // ...\n  }, [editor, calculatePosition]);\n\n  useEffect(() => {\n    // ...\n  }, [editor, $handleSelectionChange]);\n\n  const show = coords !== undefined;\n\n  useEffect(() => {\n    if (!show && isPointerReleased) {\n      editor.getEditorState().read(() => $handleSelectionChange());\n    }\n    // Adding show to the dependency array causes an issue if\n    // a range selection is dismissed by navigating via arrow keys.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPointerReleased, $handleSelectionChange, editor]);\n\n  return createPortal(\n    <FloatingMenu ref={ref} editor={editor} coords={coords} />,\n    DOM_ELEMENT\n  );\n}\n`},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:403,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:403,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"If the pointer was released and our coordinates are still undefined, we access the editor state and trigger our \",(0,t.jsxDEV)(n.code,{children:\"$handleSelectionChange\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:452,columnNumber:113},this),\" callback.\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:452,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"With this we finally have all our pieces to test our floating menu in the editor!\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:454,columnNumber:1},this),`\n`,(0,t.jsxDEV)(m,{src:\"/images/posts/how-to-build-a-floating-menu-with-lexical-react/lexical-floating-menu.gif\",alt:\"Lexical Floating Menu\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:456,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h2,{id:\"wrap-up\",children:[(0,t.jsxDEV)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#wrap-up\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\"},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\"},this),\"Wrap up\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:461,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Now, this was honestly a lot to digest! Take your time and go through the steps again.\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:463,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"If you have question, feel free to reach out to me on Twitter:\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:465,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"You find \",(0,t.jsxDEV)(n.a,{href:\"https://github.com/konstantinmuenster/lexical-react-floating-menu\",target:\"_blank\",rel:\"noopener noreferrer nofollow\",children:\"the full project on Github\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:467,columnNumber:10},this),\".\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:467,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.hr,{},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:469,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h4,{id:\"-shortcut-needed\",children:[(0,t.jsxDEV)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#-shortcut-needed\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\"},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\"},this),\"\\u{1F481} Shortcut needed?\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:471,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"Since interactive editor components such as a floating menu / bubble menu are hard to get right, I released \",(0,t.jsxDEV)(n.code,{children:\"lexical-floating-menu\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:473,columnNumber:109},this),\" \\u2013 a headless and fully customizable plugin to create floating menus easily.\"]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:473,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"It encapsulates everything we learnt in this tutorial. You can simply install it as any other npm package. Check out the instructions on Github:\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:475,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:(0,t.jsxDEV)(n.a,{href:\"https://github.com/konstantinmuenster/lexical-floating-menu\",target:\"_blank\",rel:\"noopener noreferrer nofollow\",children:\"konstantinmuenster/lexical-floating-menu\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:477,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:477,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"I\\u2019d love to hear your feedback \\u2013 either on Github or on Twitter!\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:479,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Have fun playing with it!\"},void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:481,columnNumber:1},this)]},void 0,!0,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\",lineNumber:1,columnNumber:1},this)}function gn(d={}){let{wrapper:n}=d.components||{};return n?(0,t.jsxDEV)(n,Object.assign({},d,{children:(0,t.jsxDEV)(Re,d,void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\"},this)}),void 0,!1,{fileName:\"/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx\"},this):Re(d)}var xn=gn;function q(d,n,m){throw new Error(\"Expected \"+(n?\"component\":\"object\")+\" `\"+d+\"` to be defined: you likely forgot to import, pass, or provide it.\"+(m?\"\\nIt\\u2019s referenced in your code at `\"+m+\"` in `/Users/evg/Documents/velolider/velolider/content/posts/_mdx_bundler_entry_point-164bcd77-6a74-4b89-9061-8ca8f5fef140.mdx`\":\"\"))}return vn(Nn);})();\n/*! Bundled license information:\n\nreact/cjs/react-jsx-dev-runtime.development.js:\n  (**\n   * @license React\n   * react-jsx-dev-runtime.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *)\n*/\n;return Component;"
  },
  "_id": "posts/011-how-to-build-a-floating-menu-with-lexical-react.mdx",
  "_raw": {
    "sourceFilePath": "posts/011-how-to-build-a-floating-menu-with-lexical-react.mdx",
    "sourceFileName": "011-how-to-build-a-floating-menu-with-lexical-react.mdx",
    "sourceFileDir": "posts",
    "contentType": "mdx",
    "flattenedPath": "posts/011-how-to-build-a-floating-menu-with-lexical-react"
  },
  "type": "Post",
  "slug": "how-to-build-a-floating-menu-with-lexical-react"
}